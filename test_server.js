// –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –¢–ï–°–¢ DEV-–°–ï–†–í–ï–†–ê
const { spawn, exec } = require('child_process');

console.log('üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –¢–ï–°–¢ DEV-–°–ï–†–í–ï–†–ê');
console.log('–î–∞—Ç–∞:', new Date().toLocaleString());

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Å–µ—Ä–≤–µ—Ä
exec('curl -s -I http://localhost:5173', (error, stdout) => {
    if (!error && stdout.includes('HTTP')) {
        console.log('‚úÖ –†–ê–ë–û–¢–ê–ï–¢! –°–µ—Ä–≤–µ—Ä —É–∂–µ –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:5173');
        console.log('Response:', stdout.split('\n')[0]);
        return;
    }
    
    console.log('‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –∑–∞–ø—É—Å–∫–∞—é...');
    
    // –£–±–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã
    exec('killall -9 node; killall -9 vite; lsof -ti:5173 | xargs kill -9', (err) => {
        console.log('üîÑ –ü—Ä–æ—Ü–µ—Å—Å—ã –æ—á–∏—â–µ–Ω—ã');
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä
        console.log('üöÄ –ó–∞–ø—É—Å–∫: bun run dev');
        
        const server = spawn('bun', ['run', 'dev'], {
            stdio: 'pipe',
            detached: false
        });
        
        let hasStarted = false;
        
        server.stdout.on('data', (data) => {
            const text = data.toString();
            console.log('SERVER:', text.trim());
            
            if ((text.includes('Local:') || text.includes('localhost:5173')) && !hasStarted) {
                hasStarted = true;
                
                setTimeout(() => {
                    exec('curl -s -I http://localhost:5173', (error2, stdout2) => {
                        if (!error2 && stdout2.includes('HTTP')) {
                            console.log('\nüéâ –£–°–ü–ï–•! –†–ê–ë–û–¢–ê–ï–¢!');
                            console.log('üåê URL: http://localhost:5173');
                            console.log('‚úÖ –°–¢–ê–¢–£–°: –†–ê–ë–û–¢–ê–ï–¢');
                        } else {
                            console.log('\n‚ùå –ù–ï –†–ê–ë–û–¢–ê–ï–¢!');
                            console.log('‚ùå –°–¢–ê–¢–£–°: –ù–ï –†–ê–ë–û–¢–ê–ï–¢');
                        }
                    });
                }, 2000);
            }
        });
        
        server.stderr.on('data', (data) => {
            console.error('ERROR:', data.toString().trim());
        });
        
        server.on('error', (err) => {
            console.error('‚ùå –û–®–ò–ë–ö–ê –ó–ê–ü–£–°–ö–ê:', err.message);
        });
        
        // –§–æ—Ä—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
            if (!hasStarted) {
                console.log('‚è∞ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞...');
                exec('curl -s -I http://localhost:5173', (error3, stdout3) => {
                    if (!error3 && stdout3.includes('HTTP')) {
                        console.log('\nüéâ –†–ê–ë–û–¢–ê–ï–¢! http://localhost:5173');
                        console.log('‚úÖ –°–¢–ê–¢–£–°: –†–ê–ë–û–¢–ê–ï–¢');
                    } else {
                        console.log('\n‚ùå –°–¢–ê–¢–£–°: –ù–ï –†–ê–ë–û–¢–ê–ï–¢');
                        console.log('–ü–æ–ø—Ä–æ–±—É–π –≤—Ä—É—á–Ω—É—é: bun run dev');
                    }
                });
            }
        }, 5000);
    });
});