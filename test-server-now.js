const { spawn } = require('child_process');
const path = require('path');

console.log('üî• –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –¢–ï–°–¢ –°–ï–†–í–ï–†–ê - –ó–ê–ü–£–°–ö –ü–†–Ø–ú–û –°–ï–ô–ß–ê–°!');
console.log('='.repeat(60));

// –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø–∞–ø–∫—É server –∏ –∑–∞–ø—É—Å–∫–∞–µ–º tsx
const serverPath = path.join(process.cwd(), 'server');
console.log(`üìÇ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø–∞–ø–∫—É: ${serverPath}`);

const command = 'npx';
const args = ['tsx', 'src/simple-app.ts'];

console.log(`üöÄ –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É: ${command} ${args.join(' ')}`);

const child = spawn(command, args, {
  cwd: serverPath,
  stdio: 'inherit',
  shell: true
});

child.on('error', (error) => {
  console.error('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê:', error);
});

child.on('close', (code) => {
  console.log(`üèÅ –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–µ–Ω —Å –∫–æ–¥–æ–º: ${code}`);
});

// –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ –ø—Ä–æ—Ü–µ—Å—Å –Ω–∞ –ø–æ—Ä—Ç—É 3001
const { exec } = require('child_process');
exec('netstat -an | grep 3001', (error, stdout, stderr) => {
  if (stdout) {
    console.log('‚ö†Ô∏è –ü–†–û–¶–ï–°–° –£–ñ–ï –ù–ê –ü–û–†–¢–£ 3001:');
    console.log(stdout);
  } else {
    console.log('‚úÖ –ü–æ—Ä—Ç 3001 —Å–≤–æ–±–æ–¥–µ–Ω');
  }
});