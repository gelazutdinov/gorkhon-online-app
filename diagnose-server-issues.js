const fs = require('fs');
const path = require('path');

console.log('üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú –° –°–ï–†–í–ï–†–û–ú');
console.log('='.repeat(50));

// 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ñ–∞–π–ª–æ–≤
console.log('üìÇ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã:');
const serverDir = path.join(process.cwd(), 'server');
const srcDir = path.join(serverDir, 'src');

console.log(`Server dir exists: ${fs.existsSync(serverDir)}`);
console.log(`Src dir exists: ${fs.existsSync(srcDir)}`);

if (fs.existsSync(srcDir)) {
  const files = fs.readdirSync(srcDir);
  console.log('Files in server/src:', files);
}

// 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º simple-app.ts
const simpleAppPath = path.join(srcDir, 'simple-app.ts');
console.log(`\nüìÑ simple-app.ts exists: ${fs.existsSync(simpleAppPath)}`);

// 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—É—Ç–∏ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
console.log('\nüóÑÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—É—Ç–µ–π –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:');
const dbPath1 = path.join(process.cwd(), 'server', 'database.sqlite');
const dbPath2 = path.join(serverDir, 'database.sqlite');
const dbPath3 = path.join(process.cwd(), 'database.sqlite');

console.log(`DB path 1 (cwd/server/database.sqlite): ${dbPath1}`);
console.log(`DB path 1 exists: ${fs.existsSync(dbPath1)}`);

console.log(`DB path 2 (serverDir/database.sqlite): ${dbPath2}`);
console.log(`DB path 2 exists: ${fs.existsSync(dbPath2)}`);

console.log(`DB path 3 (cwd/database.sqlite): ${dbPath3}`);
console.log(`DB path 3 exists: ${fs.existsSync(dbPath3)}`);

// 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º node_modules
console.log('\nüì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:');
const nodeModulesPath = path.join(process.cwd(), 'node_modules');
console.log(`node_modules exists: ${fs.existsSync(nodeModulesPath)}`);

const requiredPackages = ['express', 'cors', 'sqlite3', 'bcryptjs', 'jsonwebtoken', 'tsx'];
for (const pkg of requiredPackages) {
  const pkgPath = path.join(nodeModulesPath, pkg);
  console.log(`${pkg}: ${fs.existsSync(pkgPath) ? '‚úÖ' : '‚ùå'}`);
}

// 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º .env —Ñ–∞–π–ª
console.log('\nüåç –ü—Ä–æ–≤–µ—Ä–∫–∞ .env:');
const envPath = path.join(serverDir, '.env');
console.log(`server/.env exists: ${fs.existsSync(envPath)}`);

if (fs.existsSync(envPath)) {
  const envContent = fs.readFileSync(envPath, 'utf8');
  console.log('ENV content preview:');
  console.log(envContent.substring(0, 200) + '...');
}

// 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
console.log('\nüìç Current working directory:', process.cwd());
console.log('__dirname:', __dirname);

console.log('\n' + '='.repeat(50));
console.log('–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
console.log('1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ tsx —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≥–ª–æ–±–∞–ª—å–Ω–æ: npm i -g tsx');
console.log('2. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏: npx tsx server/src/simple-app.ts');
console.log('3. –ò–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ—Å—Ç–æ–π JS —Å–µ—Ä–≤–µ—Ä –±–µ–∑ TypeScript');