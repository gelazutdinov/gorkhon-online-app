const { execSync } = require('child_process');

try {
  console.log('üéØ –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É –Ω–∞–ø—Ä—è–º—É—é:');
  console.log('cd server && timeout 5s npx tsx src/app.ts');
  console.log('=====================================\\n');
  
  const result = execSync('cd server && timeout 5s npx tsx src/app.ts', {
    encoding: 'utf8',
    timeout: 10000,
    stdio: 'pipe'
  });
  
  console.log('üì§ STDOUT:');
  console.log(result);
  console.log('\\n‚úÖ –ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
  
} catch (error) {
  console.log('üì§ STDOUT:');
  console.log(error.stdout || '(–ø—É—Å—Ç–æ)');
  
  console.log('\\n‚ö†Ô∏è STDERR:');
  console.log(error.stderr || '(–ø—É—Å—Ç–æ)');
  
  console.log(`\\nüìä –ö–æ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: ${error.status}`);
  
  if (error.status === 124) {
    console.log('‚úÖ –ü—Ä–æ—Ü–µ—Å—Å –±—ã–ª –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ —Ç–∞–π–º–∞—É—Ç—É (—ç—Ç–æ –æ–∂–∏–¥–∞–µ–º–æ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞)');
  } else if (error.stdout && error.stdout.includes('–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω')) {
    console.log('‚úÖ –°–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è!');
  } else {
    console.log('‚ùå –í–æ–∑–º–æ–∂–Ω–∞ –æ—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞');
  }
}