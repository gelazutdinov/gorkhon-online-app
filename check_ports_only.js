const net = require('net');

async function checkPort(port) {
    return new Promise((resolve) => {
        const server = net.createServer();
        
        server.listen(port, '127.0.0.1', () => {
            server.close(() => resolve(false)); // –ü–æ—Ä—Ç —Å–≤–æ–±–æ–¥–µ–Ω
        });
        
        server.on('error', (err) => {
            resolve(true); // –ü–æ—Ä—Ç –∑–∞–Ω—è—Ç
        });
    });
}

async function checkAllPorts() {
    console.log('üîç –ü–†–û–í–ï–†–ö–ê –ü–û–†–¢–û–í –†–ê–ó–†–ê–ë–û–¢–ö–ò\n');
    
    const ports = [
        { port: 3000, name: 'React Dev Server' },
        { port: 3001, name: 'Backend API Server' }, 
        { port: 5173, name: 'Vite Dev Server' },
        { port: 4173, name: 'Vite Preview' }
    ];
    
    const results = [];
    
    for (const { port, name } of ports) {
        const occupied = await checkPort(port);
        results.push({ port, name, occupied });
        
        const status = occupied ? 'üî¥ –ó–ê–ù–Ø–¢' : 'üü¢ –°–í–û–ë–û–î–ï–ù';
        console.log(`–ü–æ—Ä—Ç ${port} (${name}): ${status}`);
        
        if (occupied) {
            console.log(`   ‚îî‚îÄ –í–æ–∑–º–æ–∂–Ω–æ –¥–æ—Å—Ç—É–ø–µ–Ω: http://localhost:${port}`);
        }
    }
    
    console.log('\nüìä –°–í–û–î–ö–ê:');
    const occupiedPorts = results.filter(r => r.occupied);
    const freePorts = results.filter(r => !r.occupied);
    
    console.log(`   –ó–∞–Ω—è—Ç–æ –ø–æ—Ä—Ç–æ–≤: ${occupiedPorts.length}`);
    console.log(`   –°–≤–æ–±–æ–¥–Ω–æ –ø–æ—Ä—Ç–æ–≤: ${freePorts.length}`);
    
    if (occupiedPorts.length > 0) {
        console.log('\nüîÑ –î–ï–ô–°–¢–í–ò–Ø:');
        console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç–∞—é—Ç –ª–∏ —Å–µ—Ä–≤–µ—Ä—ã:');
        occupiedPorts.forEach(({ port, name }) => {
            console.log(`   - http://localhost:${port} (${name})`);
        });
        
        console.log('\n2. –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä—ã –Ω–µ –æ—Ç–≤–µ—á–∞—é—Ç, –∑–∞–≤–µ—Ä—à–∏—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å—ã:');
        console.log('   - pkill -f vite');
        console.log('   - pkill -f "npm.*dev"');
        console.log('   - lsof -ti:PORT | xargs kill -9');
        
    } else {
        console.log('\n‚úÖ –í—Å–µ –ø–æ—Ä—Ç—ã —Å–≤–æ–±–æ–¥–Ω—ã!');
        console.log('üí° –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å —Å–µ—Ä–≤–µ—Ä —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏: npm run dev');
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –±—ç–∫–µ–Ω–¥–∞
    const backendOccupied = results.find(r => r.port === 3001)?.occupied;
    if (backendOccupied) {
        console.log('\nüîß –ë–≠–ö–ï–ù–î –û–ë–ù–ê–†–£–ñ–ï–ù:');
        console.log('   API –¥–æ—Å—Ç—É–ø–Ω–æ –Ω–∞: http://localhost:3001/api');
        console.log('   Health check: http://localhost:3001/api/health');
    } else {
        console.log('\n‚ö†Ô∏è  –ë–≠–ö–ï–ù–î –ù–ï –ó–ê–ü–£–©–ï–ù:');
        console.log('   –î–ª—è –∑–∞–ø—É—Å–∫–∞: cd server && node quick-server.js');
    }
    
    console.log('\n' + '='.repeat(50));
}

checkAllPorts().catch(console.error);