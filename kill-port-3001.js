const { exec } = require('child_process');

console.log('üî™ –£–ë–ò–í–ê–ï–ú –í–°–ï –ü–†–û–¶–ï–°–°–´ –ù–ê –ü–û–†–¢–£ 3001');

// –î–ª—è —Ä–∞–∑–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º
const commands = [
  'lsof -ti:3001 | xargs kill -9',  // Unix/Linux/macOS
  'netstat -ano | findstr :3001',   // Windows –¥–ª—è –ø–æ–∏—Å–∫–∞
];

// –ü–æ–ø—Ä–æ–±—É–µ–º Unix –∫–æ–º–∞–Ω–¥—É
exec(commands[0], (error, stdout, stderr) => {
  if (error) {
    console.log('‚ÑπÔ∏è –ù–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –Ω–∞ –ø–æ—Ä—Ç—É 3001 (–∏–ª–∏ –æ—à–∏–±–∫–∞ Unix –∫–æ–º–∞–Ω–¥—ã)');
    
    // –ü–æ–ø—Ä–æ–±—É–µ–º Windows –∫–æ–º–∞–Ω–¥—É
    exec(commands[1], (error, stdout, stderr) => {
      if (stdout) {
        console.log('üìä –ü—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ –ø–æ—Ä—Ç—É 3001 (Windows):');
        console.log(stdout);
      } else {
        console.log('‚úÖ –ü–æ—Ä—Ç 3001 —Å–≤–æ–±–æ–¥–µ–Ω');
      }
    });
  } else {
    console.log('üî™ –ü—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ –ø–æ—Ä—Ç—É 3001 —É–±–∏—Ç—ã');
  }
});

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
setTimeout(() => {
  exec('netstat -an | grep 3001', (error, stdout, stderr) => {
    if (stdout) {
      console.log('‚ö†Ô∏è –í—Å–µ –µ—â–µ –µ—Å—Ç—å –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ –ø–æ—Ä—Ç—É 3001:');
      console.log(stdout);
    } else {
      console.log('‚úÖ –ü–æ—Ä—Ç 3001 –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–≤–æ–±–æ–¥–µ–Ω');
    }
  });
}, 1000);