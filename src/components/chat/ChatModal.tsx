import { useState } from "react";
import { sanitizeInput, preventXSS } from "@/utils/security";
import Icon from "@/components/ui/icon";

interface ChatMessage {
  text: string;
  sender: 'user' | 'support';
  showAgentButton?: boolean;
}

interface ChatModalProps {
  isOpen: boolean;
  onClose: () => void;
}

const getAIResponse = (userMessage: string): {text: string, showAgentButton?: boolean} => {
  const msg = userMessage.toLowerCase();
  
  if (msg.includes('–∫–æ–Ω—Ç–∞–∫—Ç') || msg.includes('–Ω–æ–º–µ—Ä') || msg.includes('—Ç–µ–ª–µ—Ñ–æ–Ω') || msg.includes('–ø–æ–∑–≤–æ–Ω–∏—Ç—å')) {
    return {
      text: '–í—Å–µ –≤–∞–∂–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã —Ä–∞–∑–º–µ—â–µ–Ω—ã –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ:\n\n‚Ä¢ –§–ê–ü –ì–æ—Ä—Ö–æ–Ω\n‚Ä¢ –£—á–∞—Å—Ç–∫–æ–≤—ã–π\n‚Ä¢ –°–∫–æ—Ä–∞—è –ø–æ–º–æ—â—å (112)\n‚Ä¢ –î–∏—Å–ø–µ—Ç—á–µ—Ä –†–≠–°\n‚Ä¢ –ú–§–¶ –ó–∞–∏–≥—Ä–∞–µ–≤–æ\n‚Ä¢ –ü–æ—á—Ç–∞ –ì–æ—Ä—Ö–æ–Ω\n‚Ä¢ –ï–î–î–° —Ä–∞–π–æ–Ω–∞\n\n–ü—Ä–æ–∫—Ä—É—Ç–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤–Ω–∏–∑, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Å –Ω–æ–º–µ—Ä–∞–º–∏!'
    };
  }
  
  if (msg.includes('—Ä–∞–±–æ—Ç') || msg.includes('–∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å') || msg.includes('–∫–∞–∫ –Ω–∞–π—Ç–∏') || msg.includes('–≥–¥–µ –Ω–∞–π—Ç–∏')) {
    return {
      text: '–ù–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –ì–æ—Ä—Ö–æ–Ω.Online –≤—ã –º–æ–∂–µ—Ç–µ:\n\nüìû –ù–∞–π—Ç–∏ –≤–∞–∂–Ω—ã–µ –Ω–æ–º–µ—Ä–∞\nüìç –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã —Å–ª—É–∂–±\nüí¨ –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π\n\n–í—Å—ë –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ. –ü—Ä–æ–∫—Ä—É—Ç–∏—Ç–µ –≤–Ω–∏–∑ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤.'
    };
  }
  
  if (msg.includes('–ø—Ä–æ–±–ª–µ–º') || msg.includes('–Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç') || msg.includes('–æ—à–∏–±–∫–∞') || msg.includes('–±–∞–≥')) {
    return {
      text: '–ü–æ–Ω–∏–º–∞—é, –≤–æ–∑–Ω–∏–∫–ª–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–±–ª–µ–º–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:\n\n1. –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É (F5)\n2. –û—á–∏—Å—Ç–∏—Ç—å –∫–µ—à –±—Ä–∞—É–∑–µ—Ä–∞\n3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ\n\n–ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –Ω–µ —Ä–µ—à–∏–ª–∞—Å—å, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É –∞–≥–µ–Ω—Ç—É ‚Äî –æ–Ω –ø–æ–º–æ–∂–µ—Ç!',
      showAgentButton: true
    };
  }
  
  if (msg.includes('–∞–≥–µ–Ω—Ç') || msg.includes('—á–µ–ª–æ–≤–µ–∫') || msg.includes('–æ–ø–µ—Ä–∞—Ç–æ—Ä') || msg.includes('–∂–∏–≤–æ–π')) {
    return {
      text: '–•–æ—Ç–∏—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∂–∏–≤—ã–º –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º? –ù–∞—à –∞–≥–µ–Ω—Ç –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å –≤–∞–º –ª–∏—á–Ω–æ!',
      showAgentButton: true
    };
  }
  
  return {
    text: '–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–æ–ø—Ä–æ—Å! –ú–æ–≥—É –ø–æ–º–æ—á—å —Å:\n\n‚Ä¢ –ü–æ–∏—Å–∫–æ–º –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ\n‚Ä¢ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏\n‚Ä¢ –ù–∞–≤–∏–≥–∞—Ü–∏–µ–π –ø–æ —Å–∞–π—Ç—É\n\n–£—Ç–æ—á–Ω–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —á—Ç–æ –∏–º–µ–Ω–Ω–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?\n\n–ò–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞—à–µ–º—É –∞–≥–µ–Ω—Ç—É –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏.',
    showAgentButton: true
  };
};

const ChatModal = ({ isOpen, onClose }: ChatModalProps) => {
  const [chatMessages, setChatMessages] = useState<ChatMessage[]>([
    {text: '–ü—Ä–∏–≤–µ—Ç! –Ø –õ–∏–Ω–∞ ‚Äî –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫ –ì–æ—Ä—Ö–æ–Ω.Online üëã\n\n–ü–æ–º–æ–≥—É —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏:\n‚Ä¢ –ö–∞–∫ –Ω–∞–π—Ç–∏ –Ω—É–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é\n‚Ä¢ –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π\n‚Ä¢ –û—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã\n\n–ó–∞–¥–∞–π—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å!', sender: 'support'}
  ]);
  const [chatInput, setChatInput] = useState('');

  const sendMessage = () => {
    if (chatInput.trim()) {
      const sanitized = sanitizeInput(chatInput.trim());
      const userMsg = preventXSS(sanitized);
      
      if (userMsg.length > 1000) {
        return;
      }
      
      setChatMessages(prev => [...prev, {text: userMsg, sender: 'user'}]);
      setChatInput('');
      
      setTimeout(() => {
        const aiResponse = getAIResponse(userMsg);
        setChatMessages(prev => [...prev, {
          text: aiResponse.text,
          sender: 'support',
          showAgentButton: aiResponse.showAgentButton
        }]);
      }, 800);
    }
  };

  if (!isOpen) return null;

  return (
    <div className="fixed inset-0 z-50 flex items-end md:items-center justify-center bg-black/50" onClick={onClose}>
      <div 
        className="bg-white rounded-t-2xl md:rounded-2xl w-full md:w-96 md:max-w-md h-[90vh] md:max-h-[80vh] flex flex-col shadow-2xl"
        onClick={(e) => e.stopPropagation()}
      >
        <div className="flex items-center justify-between p-4 border-b" style={{backgroundColor: '#F1117E'}}>
          <div className="flex items-center gap-3">
            <div className="w-10 h-10 rounded-full bg-white/20 flex items-center justify-center">
              <Icon name="Bot" size={20} className="text-white" />
            </div>
            <div>
              <h3 className="font-semibold text-white">–õ–∏–Ω–∞</h3>
              <p className="text-xs text-white/80">–ò–ò-–ø–æ–º–æ—â–Ω–∏–∫</p>
            </div>
          </div>
          <button onClick={onClose} className="text-white hover:bg-white/20 p-2 rounded-lg transition-colors">
            <Icon name="X" size={20} />
          </button>
        </div>

        <div className="flex-1 p-4 overflow-y-auto space-y-3">
          {chatMessages.map((msg, idx) => (
            <div key={idx}>
              <div 
                className={`rounded-lg p-3 max-w-[80%] ${
                  msg.sender === 'user' 
                    ? 'ml-auto bg-blue-500 text-white' 
                    : 'bg-gray-100 text-gray-800'
                }`}
              >
                <p className="text-sm whitespace-pre-line">{msg.text}</p>
                <span className="text-xs mt-1 block opacity-70">
                  {msg.sender === 'user' ? '–í—ã' : '–õ–∏–Ω–∞ (–ò–ò)'} ‚Ä¢ —Å–µ–π—á–∞—Å
                </span>
              </div>
              {msg.showAgentButton && (
                <a
                  href="https://forms.yandex.ru/u/687f5b9a84227c08790f3222/"
                  target="_blank"
                  rel="noopener noreferrer"
                  className="inline-flex items-center gap-2 mt-2 px-4 py-2 bg-gradient-to-r from-green-500 to-green-600 text-white rounded-lg hover:from-green-600 hover:to-green-700 transition-colors shadow-sm"
                >
                  <Icon name="UserCircle" size={18} />
                  <span className="text-sm font-medium">–ù–∞–ø–∏—Å–∞—Ç—å –∞–≥–µ–Ω—Ç—É</span>
                </a>
              )}
            </div>
          ))}
        </div>

        <div className="p-4 border-t">
          <div className="flex gap-2">
            <input
              type="text"
              value={chatInput}
              onChange={(e) => setChatInput(e.target.value)}
              onKeyPress={(e) => e.key === 'Enter' && sendMessage()}
              placeholder="–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."
              className="flex-1 px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
            />
            <button 
              onClick={sendMessage}
              className="bg-gradient-to-r from-blue-500 to-blue-600 text-white px-4 py-2 rounded-lg hover:from-blue-600 hover:to-blue-700 transition-colors"
            >
              <Icon name="Send" size={18} />
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default ChatModal;
