import { useState, useEffect } from 'react';
import Icon from '@/components/ui/icon';
import { telegramMockService } from '@/services/telegramMockService';

interface TelegramBotSetupModalProps {
  isOpen: boolean;
  onClose: () => void;
  onSuccess: () => void;
}

const TelegramBotSetupModal = ({ isOpen, onClose, onSuccess }: TelegramBotSetupModalProps) => {
  const [step, setStep] = useState(1);
  const [botToken, setBotToken] = useState('');
  const [subscribersCount, setSubscribersCount] = useState(0);
  const [serverStatus, setServerStatus] = useState<'checking' | 'online' | 'offline'>('checking');
  const [isValidating, setIsValidating] = useState(false);
  const [error, setError] = useState('');

  const handleValidateAndSave = async () => {
    if (!botToken.trim()) {
      setError('–í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞');
      return;
    }

    setIsValidating(true);
    setError('');

    try {
      // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –±–æ—Ç–∞ (–¥–µ–º–æ —Ä–µ–∂–∏–º)
      const result = await telegramMockService.configureBotServer(botToken.trim());
      
      if (!result.success) {
        setError(result.error || '–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞');
        setIsValidating(false);
        return;
      }
      
      // –í –¥–µ–º–æ —Ä–µ–∂–∏–º–µ –≤—Å—ë —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ
      setError('');
      setSubscribersCount(result.subscribersCount || 0);
      setStep(2);
      
      onSuccess();
    } catch (error) {
      console.error('–î–µ–º–æ —Ä–µ–∂–∏–º - –æ—à–∏–±–∫–∞ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç—Å—è:', error);
      // –í –¥–µ–º–æ —Ä–µ–∂–∏–º–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥—Ä—É–∂–µ—Å—Ç–≤–µ–Ω–Ω—É—é –æ—à–∏–±–∫—É
      setError('–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –ª—é–±–æ–π —Ç–µ–∫—Å—Ç –¥–ª–∏–Ω–Ω–µ–µ 5 —Å–∏–º–≤–æ–ª–æ–≤');
    } finally {
      setIsValidating(false);
    }
  };

  const resetForm = () => {
    setStep(1);
    setBotToken('');
    setSubscribersCount(0);
    setServerStatus('checking');
    setError('');
  };

  const handleClose = () => {
    resetForm();
    onClose();
  };

  useEffect(() => {
    if (isOpen) {
      resetForm();
      checkServerStatus();
    }
  }, [isOpen]);

  const checkServerStatus = async () => {
    setServerStatus('checking');
    const health = await telegramMockService.checkHealth();
    setServerStatus(health.isOnline ? 'online' : 'offline');
    if (health.subscribers) {
      setSubscribersCount(health.subscribers);
    }
  };

  if (!isOpen) return null;

  return (
    <div className="fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4">
      <div className="bg-white rounded-2xl shadow-2xl max-w-2xl w-full max-h-[90vh] overflow-y-auto">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="bg-gradient-to-r from-blue-500 to-purple-600 p-6 text-white rounded-t-2xl">
          <div className="flex items-center justify-between">
            <div className="flex items-center gap-3">
              <div className="w-12 h-12 bg-white/20 rounded-full flex items-center justify-center">
                <Icon name="MessageCircle" className="w-6 h-6" />
              </div>
              <div>
                <h2 className="text-xl font-bold">Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h2>
                <p className="text-blue-100 text-sm">–õ–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º —á–µ—Ä–µ–∑ –±–æ—Ç</p>
              </div>
            </div>
            <button
              onClick={handleClose}
              className="w-8 h-8 bg-white/20 rounded-full flex items-center justify-center hover:bg-white/30 transition-colors"
            >
              <Icon name="X" className="w-5 h-5" />
            </button>
          </div>
        </div>

        <div className="p-6">
          {step === 1 && (
            <div className="space-y-6">
              <div className="text-center">
                <div className="w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4">
                  <Icon name="Bot" className="w-8 h-8 text-blue-600" />
                </div>
                <h3 className="text-lg font-semibold text-gray-900 mb-2">–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ</h3>
                <p className="text-gray-600">–°–ª–µ–¥—É–π—Ç–µ —ç—Ç–∏–º —à–∞–≥–∞–º –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –±–æ—Ç–∞</p>
              </div>

              <div className="space-y-4">
                <div className="bg-blue-50 border border-blue-200 rounded-xl p-4">
                  <div className="flex items-start gap-3">
                    <div className="w-6 h-6 bg-blue-500 text-white rounded-full flex items-center justify-center text-sm font-bold flex-shrink-0">1</div>
                    <div>
                      <h4 className="font-medium text-blue-900 mb-2">–°–æ–∑–¥–∞–π—Ç–µ –±–æ—Ç–∞ –≤ Telegram</h4>
                      <ol className="text-blue-800 text-sm space-y-1">
                        <li>‚Ä¢ –û—Ç–∫—Ä–æ–π—Ç–µ —á–∞—Ç —Å @BotFather –≤ Telegram</li>
                        <li>‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É <code className="bg-blue-200 px-1 rounded">/newbot</code></li>
                        <li>‚Ä¢ –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –∏ –¥–∞–π—Ç–µ –±–æ—Ç—É –∏–º—è</li>
                        <li>‚Ä¢ –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω</li>
                      </ol>
                    </div>
                  </div>
                </div>

                <div className="bg-green-50 border border-green-200 rounded-xl p-4">
                  <div className="flex items-start gap-3">
                    <div className="w-6 h-6 bg-green-500 text-white rounded-full flex items-center justify-center text-sm font-bold flex-shrink-0">2</div>
                    <div>
                      <h4 className="font-medium text-green-900 mb-2">–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–∏—Å—Ç–µ–º–∞</h4>
                      <ol className="text-green-800 text-sm space-y-1">
                        <li>‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–∏—à—É—Ç –±–æ—Ç—É –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ</li>
                        <li>‚Ä¢ –ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –∏—Ö –≤ –ø–æ–¥–ø–∏—Å—á–∏–∫–∏</li>
                        <li>‚Ä¢ –í—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏—Ö–æ–¥—è—Ç –∏–º –õ–ò–ß–ù–û –≤ —á–∞—Ç</li>
                        <li>‚Ä¢ –ù–∏–∫–∞–∫–∏—Ö –∫–∞–Ω–∞–ª–æ–≤ - —Ç–æ–ª—å–∫–æ –ª–∏—á–Ω–∞—è –ø–µ—Ä–µ–ø–∏—Å–∫–∞!</li>
                      </ol>
                    </div>
                  </div>
                </div>

                <div className="bg-purple-50 border border-purple-200 rounded-xl p-4">
                  <div className="flex items-start gap-3">
                    <div className="w-6 h-6 bg-purple-500 text-white rounded-full flex items-center justify-center text-sm font-bold flex-shrink-0">3</div>
                    <div>
                      <h4 className="font-medium text-purple-900 mb-2">–î–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤</h4>
                      <div className="text-purple-800 text-sm space-y-2">
                        <p>–ü–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:</p>
                        <ol className="space-y-1">
                          <li>‚Ä¢ –°–µ—Ä–≤–µ—Ä –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—â–µ–Ω</li>
                          <li>‚Ä¢ Webhook –Ω–∞—Å—Ç—Ä–æ–∏—Ç—Å—è –¥–ª—è —Å–±–æ—Ä–∞ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤</li>
                          <li>‚Ä¢ API –≥–æ—Ç–æ–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</li>
                          <li>‚Ä¢ –í—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ –º–∏–Ω–∏-—Å–µ—Ä–≤–µ—Ä Node.js</li>
                        </ol>
                      </div>
                    </div>
                  </div>
                </div>
              </div>

              <div className="flex justify-end">
                <button
                  onClick={() => setStep(2)}
                  className="px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors flex items-center gap-2"
                >
                  –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å
                  <Icon name="ArrowRight" size={16} />
                </button>
              </div>
            </div>
          )}

          {step === 2 && (
            <div className="space-y-6">
              <div className="text-center">
                <div className="w-16 h-16 bg-purple-100 rounded-full flex items-center justify-center mx-auto mb-4">
                  <Icon name="Settings" className="w-8 h-8 text-purple-600" />
                </div>
                <h3 className="text-lg font-semibold text-gray-900 mb-2">–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –±–æ—Ç–∞</h3>
                <p className="text-gray-600">–í—Å—Ç–∞–≤—å—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏ Chat ID</p>
              </div>

              {error && (
                <div className="bg-red-50 border border-red-200 rounded-xl p-4 text-red-800">
                  <div className="flex items-center gap-2">
                    <Icon name="AlertCircle" size={16} />
                    <span className="text-sm">{error}</span>
                  </div>
                </div>
              )}

              <div className="space-y-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –¢–æ–∫–µ–Ω –±–æ—Ç–∞
                  </label>
                  <input
                    type="text"
                    value={botToken}
                    onChange={(e) => setBotToken(e.target.value)}
                    className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent font-mono text-sm"
                    placeholder="demo123 (–ª—é–±–æ–π —Ç–µ–∫—Å—Ç –¥–ª—è –¥–µ–º–æ)"
                  />
                  <p className="text-xs text-gray-500 mt-1">
                    üé≠ –î–ï–ú–û: –í–≤–µ–¥–∏—Ç–µ –ª—é–±–æ–π —Ç–µ–∫—Å—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: demo123)
                  </p>
                </div>

                {subscribersCount > 0 && (
                  <div className="bg-green-50 border border-green-200 rounded-lg p-4">
                    <div className="flex items-center gap-3">
                      <Icon name="Users" className="w-5 h-5 text-green-600" />
                      <div>
                        <h4 className="font-medium text-green-900">–ü–æ–¥–ø–∏—Å—á–∏–∫–∏ –±–æ—Ç–∞</h4>
                        <div className="text-2xl font-bold text-green-900">
                          {subscribersCount} —á–µ–ª–æ–≤–µ–∫
                        </div>
                        <p className="text-green-700 text-sm mt-1">
                          –ü–æ–ª—É—á–∞—é—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ª–∏—á–Ω–æ –≤ —á–∞—Ç
                        </p>
                      </div>
                    </div>
                  </div>
                )}
                
                <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
                  <div className="flex items-start gap-3">
                    <Icon name="Info" className="w-5 h-5 text-blue-600 mt-0.5" />
                    <div>
                      <h4 className="font-medium text-blue-900 mb-2">–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ–¥–ø–∏—à—É—Ç—Å—è:</h4>
                      <ol className="text-blue-800 text-sm space-y-1">
                        <li>1. –ù–∞–π—Ç–∏ –≤–∞—à–µ–≥–æ –±–æ—Ç–∞ –≤ Telegram</li>
                        <li>2. –ù–∞–ø–∏—Å–∞—Ç—å /start –∏–ª–∏ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ</li>
                        <li>3. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å—Ç–∞—Ç—å –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–º</li>
                        <li>4. –ü–æ–ª—É—á–∞—Ç—å –≤—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ª–∏—á–Ω–æ!</li>
                      </ol>
                    </div>
                  </div>
                </div>
              </div>

              <div className="flex justify-between">
                <button
                  onClick={() => setStep(1)}
                  className="px-6 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors flex items-center gap-2"
                >
                  <Icon name="ArrowLeft" size={16} />
                  –ù–∞–∑–∞–¥
                </button>
                <button
                  onClick={handleValidateAndSave}
                  disabled={isValidating || !botToken.trim() || serverStatus === 'offline'}
                  className="px-6 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed flex items-center gap-2"
                >
                  {isValidating ? (
                    <>
                      <div className="w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin" />
                      –ü—Ä–æ–≤–µ—Ä–∫–∞...
                    </>
                  ) : (
                    <>
                      <Icon name="Check" size={16} />
                      –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏ –ø–æ–¥–∫–ª—é—á–∏—Ç—å
                    </>
                  )}
                </button>
              </div>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default TelegramBotSetupModal;