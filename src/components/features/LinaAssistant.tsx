import { useState, useEffect, useRef } from 'react';
import Icon from '@/components/ui/icon';

interface Message {
  id: string;
  text: string;
  isUser: boolean;
  timestamp: Date;
  typing?: boolean;
}

interface LinaAssistantProps {
  onClose: () => void;
}

const LinaAssistant = ({ onClose }: LinaAssistantProps) => {
  const [messages, setMessages] = useState<Message[]>([]);
  const [inputValue, setInputValue] = useState('');
  const [isTyping, setIsTyping] = useState(false);
  const [isMinimized, setIsMinimized] = useState(false);
  const messagesEndRef = useRef<HTMLDivElement>(null);



  const linaResponses = {
    '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ': 'üöå –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∞–≤—Ç–æ–±—É—Å–æ–≤ –ì–æ—Ä—Ö–æ–Ω-–£–ª–∞–Ω-–£–¥—ç:\n\nüïñ –ò–∑ –ì–æ—Ä—Ö–æ–Ω–∞: 7:00, 14:00, 18:30\nüïò –ò–∑ –£–ª–∞–Ω-–£–¥—ç: 9:00, 16:00, 20:00\n‚è±Ô∏è –í—Ä–µ–º—è –≤ –ø—É—Ç–∏: ~1 —á–∞—Å',
    '–Ω–æ–º–µ—Ä–∞': 'üìû –í–∞–∂–Ω—ã–µ –Ω–æ–º–µ—Ä–∞:\n\nüö® –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ —Å–ª—É–∂–±—ã: 112\nüëÆ –ü–æ–ª–∏—Ü–∏—è: 02\nüöë –°–∫–æ—Ä–∞—è –ø–æ–º–æ—â—å: 03\nüöí –ü–æ–∂–∞—Ä–Ω–∞—è —Å–ª—É–∂–±–∞: 01',
    '—Ä–µ–∂–∏–º': 'üè¢ –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:\n\nüè• –ü–æ–ª–∏–∫–ª–∏–Ω–∏–∫–∞: –ü–ù-–ü–¢ 8:00-16:00, –°–ë 9:00-13:00\nüìÆ –ü–æ—á—Ç–∞: –ü–ù-–ü–¢ 9:00-17:00',
    '–ø—É–Ω–∫—Ç—ã': 'üì¶ –ü—É–Ω–∫—Ç—ã –≤—ã–¥–∞—á–∏ –≤ –ì–æ—Ä—Ö–æ–Ω–µ:\n\nüõçÔ∏è –ü–í–ó Wildberries - —É–ª. –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è, 15\nüìÆ –ü–æ—á—Ç–∞ –†–æ—Å—Å–∏–∏ - —É–ª. –°–æ–≤–µ—Ç—Å–∫–∞—è, 8\nüè™ –ú–∞–≥–∞–∑–∏–Ω "–ü—Ä–æ–¥—É–∫—Ç—ã" - —É–ª. –®–∫–æ–ª—å–Ω–∞—è, 3',
    '—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è': '–Ø –ø–æ–º–æ–≥—É —Ä–µ—à–∏—Ç—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ø—Ä–æ–±–ª–µ–º—É! –û–ø–∏—à–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç:\n\n‚Ä¢ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ –≤ –∞–∫–∫–∞—É–Ω—Ç?\n‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–≥—Ä—É–∑–∫–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü?\n‚Ä¢ –ù–µ —Ä–∞–±–æ—Ç–∞—é—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è?\n‚Ä¢ –î—Ä—É–≥–∏–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Å–±–æ–∏?\n\n–ò–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–≥–µ–Ω—Ç—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏: https://forms.yandex.ru/u/687f5b9a84227c08790f3222/',
    '–ø–æ–¥–¥–µ—Ä–∂–∫–∞': '–î–ª—è —Å–≤—è–∑–∏ —Å –∞–≥–µ–Ω—Ç–æ–º –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ:\n\nüë®‚Äçüíª [–§–æ—Ä–º–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É](https://forms.yandex.ru/u/687f5b9a84227c08790f3222/)\n\n–ù–∞—à–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã –æ—Ç–≤–µ—Ç—è—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤!',
    'default': '–Ø –ø–æ–º–æ–≥—É –≤–∞–º –Ω–∞–π—Ç–∏ –Ω—É–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é! \n\nüìå –ú–æ–≥—É —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ:\n‚Ä¢ –†–∞—Å–ø–∏—Å–∞–Ω–∏–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞\n‚Ä¢ –í–∞–∂–Ω—ã—Ö –Ω–æ–º–µ—Ä–∞—Ö —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤\n‚Ä¢ –†–µ–∂–∏–º–µ —Ä–∞–±–æ—Ç—ã –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π\n‚Ä¢ –ü—É–Ω–∫—Ç–∞—Ö –≤—ã–¥–∞—á–∏ –∑–∞–∫–∞–∑–æ–≤\n‚Ä¢ –†–µ—à–µ–Ω–∏–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º\n\nüí¨ –ò–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π: https://forms.yandex.ru/u/687f5b9a84227c08790f3222/'
  };

  useEffect(() => {
    // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    const welcomeMessage: Message = {
      id: '1',
      text: 'üëã –ü—Ä–∏–≤–µ—Ç! –Ø –õ–∏–Ω–∞, –≤–∞—à —Ü–∏—Ñ—Ä–æ–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –ì–æ—Ä—Ö–æ–Ω—É.\n\nüîß –ü–æ–º–æ–≥–∞—é —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏ –∏ –ø–æ–∏—Å–∫–æ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ—Å–µ–ª–∫–µ. –í—Å–µ –¥–∞–Ω–Ω—ã–µ –±–µ—Ä—É —Å –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.\n\n‚ùì –û —á–µ–º —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å?',
      isUser: false,
      timestamp: new Date()
    };
    setMessages([welcomeMessage]);
  }, []);

  useEffect(() => {
    scrollToBottom();
  }, [messages]);

  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });
  };

  const findResponse = (question: string): string => {
    const lowerQuestion = question.toLowerCase();
    
    // –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
    if (lowerQuestion.includes('–æ—à–∏–±–∫–∞') || lowerQuestion.includes('–Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç') || lowerQuestion.includes('–ø—Ä–æ–±–ª–µ–º–∞') || 
        lowerQuestion.includes('–±–∞–≥') || lowerQuestion.includes('—Å–ª–æ–º–∞–ª') || lowerQuestion.includes('–∑–∞–≤–∏—Å–∞–µ—Ç') ||
        lowerQuestion.includes('–º–µ–¥–ª–µ–Ω–Ω–æ') || lowerQuestion.includes('–≥—Ä—É–∑–∏—Ç—Å—è') || lowerQuestion.includes('—Ç–æ—Ä–º–æ–∑')) {
      return linaResponses.—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è;
    }
    
    // –ü–æ–¥–¥–µ—Ä–∂–∫–∞
    if (lowerQuestion.includes('–ø–æ–¥–¥–µ—Ä–∂–∫') || lowerQuestion.includes('–∞–≥–µ–Ω—Ç') || lowerQuestion.includes('–æ–ø–µ—Ä–∞—Ç–æ—Ä') ||
        lowerQuestion.includes('—á–µ–ª–æ–≤–µ–∫') || lowerQuestion.includes('–∂–∏–≤–æ–π') || lowerQuestion.includes('–∂–∞–ª–æ–±–∞')) {
      return linaResponses.–ø–æ–¥–¥–µ—Ä–∂–∫–∞;
    }
    
    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
    if (lowerQuestion.includes('—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ') || lowerQuestion.includes('–∞–≤—Ç–æ–±—É—Å') || lowerQuestion.includes('—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç')) {
      return linaResponses.—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ;
    }
    if (lowerQuestion.includes('–Ω–æ–º–µ—Ä') || lowerQuestion.includes('—Ç–µ–ª–µ—Ñ–æ–Ω') || lowerQuestion.includes('—ç–∫—Å—Ç—Ä–µ–Ω–Ω')) {
      return linaResponses.–Ω–æ–º–µ—Ä–∞;
    }
    if (lowerQuestion.includes('—Ä–µ–∂–∏–º') || lowerQuestion.includes('—Ä–∞–±–æ—Ç') || lowerQuestion.includes('—á–∞—Å')) {
      return linaResponses.—Ä–µ–∂–∏–º;
    }
    if (lowerQuestion.includes('–ø–≤–∑') || lowerQuestion.includes('–≤—ã–¥–∞—á') || lowerQuestion.includes('–∑–∞–∫–∞–∑')) {
      return linaResponses.–ø—É–Ω–∫—Ç—ã;
    }
    
    return linaResponses.default;
  };

  const handleSendMessage = () => {
    if (!inputValue.trim()) return;

    const userMessage: Message = {
      id: Date.now().toString(),
      text: inputValue,
      isUser: true,
      timestamp: new Date()
    };

    setMessages(prev => [...prev, userMessage]);
    setInputValue('');
    setIsTyping(true);

    // –ò–º–∏—Ç–∞—Ü–∏—è –ø–µ—á–∞—Ç–∞–Ω–∏—è –õ–∏–Ω—ã
    setTimeout(() => {
      const response = findResponse(inputValue);
      const linaMessage: Message = {
        id: (Date.now() + 1).toString(),
        text: response,
        isUser: false,
        timestamp: new Date()
      };

      setMessages(prev => [...prev, linaMessage]);
      setIsTyping(false);
    }, 1000 + Math.random() * 1000);
  };



  const formatTime = (date: Date) => {
    return date.toLocaleTimeString('ru-RU', { 
      hour: '2-digit', 
      minute: '2-digit' 
    });
  };

  if (isMinimized) {
    return (
      <div className="fixed bottom-32 sm:bottom-28 right-4 z-[60]">
        <button
          onClick={() => setIsMinimized(false)}
          className="bg-gorkhon-blue text-white p-3 sm:p-4 rounded-full shadow-lg hover:shadow-xl transition-all duration-300 hover:scale-105"
        >
          <Icon name="MessageCircle" size={20} className="sm:w-6 sm:h-6" />
          <div className="absolute -top-1 -right-1 w-3 h-3 bg-red-500 rounded-full animate-pulse"></div>
        </button>
      </div>
    );
  }

  return (
    <div className="fixed inset-0 pb-32 sm:pb-0 sm:bottom-28 sm:right-4 sm:inset-auto z-[60] flex sm:block">
      <div className="bg-white sm:rounded-2xl shadow-2xl border border-gray-200 w-full sm:w-96 h-full sm:h-[32rem] flex flex-col overflow-hidden">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="bg-gorkhon-blue text-white p-4 sm:p-5 flex items-center justify-between shadow-lg">
          <div className="flex items-center gap-3 sm:gap-4">
            <div className="w-8 h-8 sm:w-10 sm:h-10 rounded-full overflow-hidden bg-white/20 flex-shrink-0">
              <img 
                src="https://images.unsplash.com/photo-1494790108755-2616b332c792?w=100&h=100&fit=crop&crop=face" 
                alt="–õ–∏–Ω–∞" 
                className="w-full h-full object-cover"
              />
            </div>
            <div>
              <div className="flex items-center gap-2">
                <h3 className="font-bold text-base sm:text-lg">–õ–∏–Ω–∞</h3>
                <img 
                  src="https://cdn.poehali.dev/files/8371ad18-b8e1-4b43-98dc-dd6b47da6cfa.png" 
                  alt="–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω" 
                  className="w-3 h-3 sm:w-4 sm:h-4 filter brightness-0 invert"
                />
              </div>
              <p className="text-sm text-white/90 sm:block">–¶–∏—Ñ—Ä–æ–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –ì–æ—Ä—Ö–æ–Ω–∞</p>
            </div>
          </div>
          <div className="flex items-center gap-2 sm:gap-3">
            <button
              onClick={() => setIsMinimized(true)}
              className="p-2 hover:bg-white/20 rounded-lg transition-colors hidden sm:block"
              title="–°–≤–µ—Ä–Ω—É—Ç—å"
            >
              <Icon name="Minus" size={18} />
            </button>
            <button
              onClick={onClose}
              className="p-2 hover:bg-white/20 rounded-lg transition-colors"
              title="–ó–∞–∫—Ä—ã—Ç—å"
            >
              <Icon name="X" size={18} />
            </button>
          </div>
        </div>

        {/* –°–æ–æ–±—â–µ–Ω–∏—è */}
        <div className="flex-1 p-4 sm:p-5 overflow-y-auto space-y-4 sm:space-y-5 bg-gradient-to-b from-gray-50/50 to-white">
          {messages.map((message) => (
            <div
              key={message.id}
              className={`flex ${message.isUser ? 'justify-end' : 'justify-start'}`}
            >
              <div
                className={`max-w-[85%] sm:max-w-[80%] p-3 sm:p-4 rounded-2xl shadow-sm ${
                  message.isUser
                    ? 'bg-gradient-to-r from-gorkhon-pink to-gorkhon-green text-white shadow-pink-200'
                    : 'bg-white text-gray-800 border border-gray-100'
                }`}
              >
                <p className="text-sm sm:text-base leading-relaxed whitespace-pre-line">{message.text}</p>
                <p className={`text-xs mt-1 ${
                  message.isUser ? 'text-white/70' : 'text-gray-500'
                }`}>
                  {formatTime(message.timestamp)}
                </p>
              </div>
            </div>
          ))}

          {isTyping && (
            <div className="flex justify-start">
              <div className="bg-gray-100 p-2 sm:p-3 rounded-2xl">
                <div className="flex items-center gap-1">
                  <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce"></div>
                  <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce" style={{ animationDelay: '0.1s' }}></div>
                  <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce" style={{ animationDelay: '0.2s' }}></div>
                </div>
              </div>
            </div>
          )}
          <div ref={messagesEndRef} />
        </div>

        {/* –í–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è */}
        <div className="p-4 sm:p-5 border-t border-gray-200 bg-white safe-area-bottom">
          <div className="flex items-center gap-3">
            <input
              type="text"
              value={inputValue}
              onChange={(e) => setInputValue(e.target.value)}
              onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}
              placeholder="–°–ø—Ä–æ—Å–∏—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å..."
              className="flex-1 px-4 py-3 border border-gray-300 rounded-full focus:ring-2 focus:ring-gorkhon-pink focus:border-transparent text-sm sm:text-base shadow-inner"
            />
            <button
              onClick={handleSendMessage}
              disabled={!inputValue.trim()}
              className="p-3 bg-gradient-to-r from-gorkhon-pink to-gorkhon-green text-white rounded-full hover:shadow-lg transition-all disabled:opacity-50 disabled:cursor-not-allowed active:scale-95 hover:scale-105"
            >
              <Icon name="Send" size={18} />
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default LinaAssistant;