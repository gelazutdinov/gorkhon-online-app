import { getAutoFillCredentials, saveCredentials, clearCredentials } from '@/utils/rememberMe';

interface DebugPanelProps {
  formData: {
    email: string;
    password: string;
    name: string;
    birthDate: string;
    gender: 'male' | 'female';
  };
  rememberMe: boolean;
  setFormData: React.Dispatch<React.SetStateAction<{
    name: string;
    email: string;
    password: string;
    birthDate: string;
    gender: 'male' | 'female';
  }>>;
  setRememberMe: React.Dispatch<React.SetStateAction<boolean>>;
  setForceUpdate: React.Dispatch<React.SetStateAction<number>>;
}

const DebugPanel = ({ formData, rememberMe, setFormData, setRememberMe, setForceUpdate }: DebugPanelProps) => {
  return (
    <div className="p-3 bg-gray-50 border border-gray-200 rounded-lg text-xs">
      <strong>üîß –û—Ç–ª–∞–¥–∫–∞ "–ó–∞–ø–æ–º–Ω–∏—Ç—å –º–µ–Ω—è":</strong>
      <div className="mt-1 space-y-1">
        <div>savedEmail: {localStorage.getItem('savedEmail') || '–Ω–µ –Ω–∞–π–¥–µ–Ω'}</div>
        <div>savedPassword: {localStorage.getItem('savedPassword') ? '***' : '–Ω–µ –Ω–∞–π–¥–µ–Ω'}</div>
        <div>rememberMe: {localStorage.getItem('rememberMe') || '–Ω–µ –Ω–∞–π–¥–µ–Ω'}</div>
        <div>formData.email: {formData.email || '–ø—É—Å—Ç–æ–µ'}</div>
        <div>formData.password: {formData.password ? '***' : '–ø—É—Å—Ç–æ–µ'}</div>
        <div>rememberMe state: {rememberMe.toString()}</div>
      </div>
      <div className="flex gap-1 mt-2 flex-wrap">
        <button
          type="button"
          onClick={() => {
            const credentials = getAutoFillCredentials();
            console.log('üìä –í—Å–µ –¥–∞–Ω–Ω—ã–µ:', {
              localStorage: {
                savedEmail: localStorage.getItem('savedEmail'),
                savedPassword: localStorage.getItem('savedPassword'),
                rememberMe: localStorage.getItem('rememberMe')
              },
              credentials,
              formData,
              rememberMeState: rememberMe
            });
          }}
          className="px-2 py-1 bg-blue-500 text-white text-xs rounded"
        >
          –õ–æ–≥
        </button>
        <button
          type="button"
          onClick={() => {
            console.log('üß™ –¢–ï–°–¢: –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ...');
            saveCredentials('test@example.com', 'test123', true);
            
            console.log('üìä –ü–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è localStorage:', {
              email: localStorage.getItem('savedEmail'),
              password: localStorage.getItem('savedPassword'),
              rememberMe: localStorage.getItem('rememberMe')
            });
            
            const newCredentials = getAutoFillCredentials();
            console.log('üì• –ó–∞–≥—Ä—É–∂–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ:', newCredentials);
            
            setFormData(prev => {
              console.log('üîÑ –û–±–Ω–æ–≤–ª—è–µ–º formData —Å:', prev, '–Ω–∞:', {
                ...prev,
                email: newCredentials.email,
                password: newCredentials.password
              });
              
              return {
                ...prev,
                email: newCredentials.email,
                password: newCredentials.password
              };
            });
            
            setRememberMe(newCredentials.rememberMe);
            setForceUpdate(prev => prev + 1);
            console.log('‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω');
          }}
          className="px-2 py-1 bg-green-500 text-white text-xs rounded"
        >
          –¢–µ—Å—Ç
        </button>
        <button
          type="button"
          onClick={() => {
            const credentials = getAutoFillCredentials();
            console.log('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞:', credentials);
            
            setFormData(prev => ({
              ...prev,
              email: credentials.email,
              password: credentials.password
            }));
            setRememberMe(credentials.rememberMe);
            setForceUpdate(prev => prev + 1);
          }}
          className="px-2 py-1 bg-orange-500 text-white text-xs rounded"
        >
          –ó–∞–≥—Ä—É–∑–∏—Ç—å
        </button>
        <button
          type="button"
          onClick={() => {
            clearCredentials();
            setFormData(prev => ({
              ...prev,
              email: '',
              password: ''
            }));
            setRememberMe(false);
          }}
          className="px-2 py-1 bg-red-500 text-white text-xs rounded"
        >
          –û—á–∏—Å—Ç–∏—Ç—å
        </button>
        <button
          type="button"
          onClick={() => {
            console.log('üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è...');
            window.location.reload();
          }}
          className="px-2 py-1 bg-purple-500 text-white text-xs rounded"
        >
          –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å
        </button>
      </div>
      
      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ */}
      <div className="mt-2 text-xs text-gray-600">
        <div>üîç <strong>–û–∂–∏–¥–∞–µ–º–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ:</strong></div>
        <div>1. –ù–∞–∂–º–∏ "–¢–µ—Å—Ç" ‚Üí –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω—è—Ç—Å—è</div>
        <div>2. –ù–∞–∂–º–∏ "–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å" ‚Üí –ø–æ–ª—è –¥–æ–ª–∂–Ω—ã –æ—Å—Ç–∞—Ç—å—Å—è –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–º–∏</div>
        <div>3. –ò–ª–∏ –≤–æ–π–¥–∏ —Ä–µ–∞–ª—å–Ω–æ —Å –≥–∞–ª–æ—á–∫–æ–π "–ó–∞–ø–æ–º–Ω–∏—Ç—å –º–µ–Ω—è"</div>
      </div>
    </div>
  );
};

export default DebugPanel;