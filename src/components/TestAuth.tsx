import { useState, useEffect } from 'react';
import { Button } from '@/components/ui/button';
import { getAllUsers, getCurrentUser, logoutUser } from '@/utils/auth';

const TestAuth = () => {
  const [users, setUsers] = useState<any[]>([]);
  const [currentUser, setCurrentUser] = useState<any>(null);

  const refreshData = () => {
    setUsers(getAllUsers());
    setCurrentUser(getCurrentUser());
  };

  useEffect(() => {
    refreshData();
  }, []);

  const handleLogout = () => {
    logoutUser();
    refreshData();
  };

  const clearAllData = () => {
    localStorage.removeItem('gorkhon_users');
    localStorage.removeItem('gorkhon_current_user');
    refreshData();
  };

  return (
    <div className="min-h-screen bg-gray-50 p-8">
      <div className="max-w-4xl mx-auto">
        <div className="bg-white rounded-2xl shadow-lg p-6 mb-6">
          <h1 className="text-2xl font-bold text-gray-900 mb-4">üß™ –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏</h1>
          
          {/* Current User */}
          <div className="mb-6">
            <h2 className="text-lg font-semibold text-gray-800 mb-3">üë§ –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</h2>
            {currentUser ? (
              <div className="bg-green-50 border border-green-200 rounded-lg p-4">
                <p className="text-green-800 font-medium">
                  {currentUser.firstName} {currentUser.lastName}
                </p>
                <p className="text-green-600 text-sm">{currentUser.email}</p>
                <Button 
                  onClick={handleLogout}
                  className="mt-3 bg-red-600 hover:bg-red-700"
                >
                  –í—ã–π—Ç–∏
                </Button>
              </div>
            ) : (
              <div className="bg-gray-50 border border-gray-200 rounded-lg p-4">
                <p className="text-gray-600">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω</p>
                <a 
                  href="/auth" 
                  className="inline-block mt-2 text-blue-600 hover:underline"
                >
                  –í–æ–π—Ç–∏ –∏–ª–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è ‚Üí
                </a>
              </div>
            )}
          </div>

          {/* All Users */}
          <div className="mb-6">
            <h2 className="text-lg font-semibold text-gray-800 mb-3">
              üìä –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ ({users.length}):
            </h2>
            {users.length === 0 ? (
              <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
                <p className="text-yellow-800">–ü–æ–∫–∞ –Ω–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</p>
              </div>
            ) : (
              <div className="space-y-3">
                {users.map((user, index) => (
                  <div key={index} className="bg-blue-50 border border-blue-200 rounded-lg p-4">
                    <div className="grid grid-cols-2 gap-4 text-sm">
                      <div>
                        <strong>Email:</strong> {user.email}
                      </div>
                      <div>
                        <strong>–ü–∞—Ä–æ–ª—å:</strong> {user.password}
                      </div>
                      <div>
                        <strong>–ò–º—è:</strong> {user.firstName}
                      </div>
                      <div>
                        <strong>–§–∞–º–∏–ª–∏—è:</strong> {user.lastName}
                      </div>
                      <div>
                        <strong>–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è:</strong> {user.birthDate}
                      </div>
                      <div>
                        <strong>–ü–æ–ª:</strong> {user.gender === 'male' ? '–ú—É–∂—Å–∫–æ–π' : user.gender === 'female' ? '–ñ–µ–Ω—Å–∫–∏–π' : '–î—Ä—É–≥–æ–π'}
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            )}
          </div>

          {/* Actions */}
          <div className="flex gap-4">
            <Button onClick={refreshData} variant="outline">
              üîÑ –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
            </Button>
            <Button onClick={clearAllData} variant="destructive">
              üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
            </Button>
          </div>
        </div>

        {/* Instructions */}
        <div className="bg-white rounded-2xl shadow-lg p-6">
          <h2 className="text-xl font-semibold text-gray-800 mb-4">üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:</h2>
          <ol className="list-decimal list-inside space-y-2 text-gray-700">
            <li>–ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ <a href="/auth" className="text-blue-600 hover:underline">/auth</a> –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏</li>
            <li>–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É —Å–æ –≤—Å–µ–º–∏ –ø–æ–ª—è–º–∏ (Email, –ü–∞—Ä–æ–ª—å, –ò–º—è, –§–∞–º–∏–ª–∏—è, –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è, –ü–æ–ª)</li>
            <li>–ü–æ—Å—Ç–∞–≤—å—Ç–µ –≥–∞–ª–æ—á–∫–∏ "–Ø –ø—Ä–∏–Ω–∏–º–∞—é —É—Å–ª–æ–≤–∏—è" –∏ "–Ø —Å–æ–≥–ª–∞—Å–µ–Ω —Å –ø–æ–ª–∏—Ç–∏–∫–æ–π"</li>
            <li>–ù–∞–∂–º–∏—Ç–µ "–°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç"</li>
            <li>–í–µ—Ä–Ω–∏—Ç–µ—Å—å —Å—é–¥–∞ –∏ —É–≤–∏–¥–∏—Ç–µ, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ—Ö—Ä–∞–Ω–∏–ª—Å—è</li>
            <li>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–æ–π—Ç–∏ —Å —Ç–µ–º–∏ –∂–µ –¥–∞–Ω–Ω—ã–º–∏</li>
          </ol>
        </div>
      </div>
    </div>
  );
};

export default TestAuth;