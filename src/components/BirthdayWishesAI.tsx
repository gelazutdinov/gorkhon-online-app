import { useState, useEffect } from 'react';
import { UserProfile } from '@/hooks/useUser';
import Icon from '@/components/ui/icon';

interface BirthdayWishesAIProps {
  user: UserProfile;
}

interface BirthdayWish {
  id: string;
  message: string;
  date: string;
  from: string;
  type: 'birthday' | 'reminder';
}

// –ó–Ω–∞–∫–∏ –∑–æ–¥–∏–∞–∫–∞ –∏ –∏—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
const zodiacSigns = {
  aries: { name: '–û–≤–µ–Ω', emoji: '‚ôà', period: '21.03-19.04', traits: '—ç–Ω–µ—Ä–≥–∏—á–Ω—ã–π, —Ä–µ—à–∏—Ç–µ–ª—å–Ω—ã–π, –ª–∏–¥–µ—Ä' },
  taurus: { name: '–¢–µ–ª–µ—Ü', emoji: '‚ôâ', period: '20.04-20.05', traits: '—É–ø–æ—Ä–Ω—ã–π, –Ω–∞–¥–µ–∂–Ω—ã–π, –ø—Ä–∞–∫—Ç–∏—á–Ω—ã–π' },
  gemini: { name: '–ë–ª–∏–∑–Ω–µ—Ü—ã', emoji: '‚ôä', period: '21.05-20.06', traits: '–æ–±—â–∏—Ç–µ–ª—å–Ω—ã–π, –ª—é–±–æ–∑–Ω–∞—Ç–µ–ª—å–Ω—ã–π, –≥–∏–±–∫–∏–π' },
  cancer: { name: '–†–∞–∫', emoji: '‚ôã', period: '21.06-22.07', traits: '–∑–∞–±–æ—Ç–ª–∏–≤—ã–π, –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω—ã–π, —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π' },
  leo: { name: '–õ–µ–≤', emoji: '‚ôå', period: '23.07-22.08', traits: '—è—Ä–∫–∏–π, —Ç–≤–æ—Ä—á–µ—Å–∫–∏–π, –≤–µ–ª–∏–∫–æ–¥—É—à–Ω—ã–π' },
  virgo: { name: '–î–µ–≤–∞', emoji: '‚ôç', period: '23.08-22.09', traits: '–∞–Ω–∞–ª–∏—Ç–∏—á–Ω—ã–π, –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–π, –ø–µ—Ä—Ñ–µ–∫—Ü–∏–æ–Ω–∏—Å—Ç' },
  libra: { name: '–í–µ—Å—ã', emoji: '‚ôé', period: '23.09-22.10', traits: '—Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤—ã–π, –¥–∏–ø–ª–æ–º–∞—Ç–∏—á–Ω—ã–π, –≥–∞—Ä–º–æ–Ω–∏—á–Ω—ã–π' },
  scorpio: { name: '–°–∫–æ—Ä–ø–∏–æ–Ω', emoji: '‚ôè', period: '23.10-21.11', traits: '—Å—Ç—Ä–∞—Å—Ç–Ω—ã–π, –ø—Ä–æ–Ω–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π, —Ü–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª–µ–Ω–Ω—ã–π' },
  sagittarius: { name: '–°—Ç—Ä–µ–ª–µ—Ü', emoji: '‚ôê', period: '22.11-21.12', traits: '–æ–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω—ã–π, —Å–≤–æ–±–æ–¥–æ–ª—é–±–∏–≤—ã–π, —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–π' },
  capricorn: { name: '–ö–æ–∑–µ—Ä–æ–≥', emoji: '‚ôë', period: '22.12-19.01', traits: '–∞–º–±–∏—Ü–∏–æ–∑–Ω—ã–π, –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π, –º—É–¥—Ä—ã–π' },
  aquarius: { name: '–í–æ–¥–æ–ª–µ–π', emoji: '‚ôí', period: '20.01-18.02', traits: '–Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–π, –Ω–æ–≤–∞—Ç–æ—Ä—Å–∫–∏–π, –≥—É–º–∞–Ω–Ω—ã–π' },
  pisces: { name: '–†—ã–±—ã', emoji: '‚ôì', period: '19.02-20.03', traits: '—Ç–≤–æ—Ä—á–µ—Å–∫–∏–π, —Å–æ—á—É–≤—Å—Ç–≤—É—é—â–∏–π, –º–µ—á—Ç–∞—Ç–µ–ª—å–Ω—ã–π' }
};

const BirthdayWishesAI = ({ user }: BirthdayWishesAIProps) => {
  const [wishes, setWishes] = useState<BirthdayWish[]>([]);
  const [showWishModal, setShowWishModal] = useState(false);
  const [todayWish, setTodayWish] = useState<BirthdayWish | null>(null);

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞
  const getZodiacSign = (birthDate: string) => {
    const date = new Date(birthDate);
    const month = date.getMonth() + 1;
    const day = date.getDate();

    if ((month === 3 && day >= 21) || (month === 4 && day <= 19)) return zodiacSigns.aries;
    if ((month === 4 && day >= 20) || (month === 5 && day <= 20)) return zodiacSigns.taurus;
    if ((month === 5 && day >= 21) || (month === 6 && day <= 20)) return zodiacSigns.gemini;
    if ((month === 6 && day >= 21) || (month === 7 && day <= 22)) return zodiacSigns.cancer;
    if ((month === 7 && day >= 23) || (month === 8 && day <= 22)) return zodiacSigns.leo;
    if ((month === 8 && day >= 23) || (month === 9 && day <= 22)) return zodiacSigns.virgo;
    if ((month === 9 && day >= 23) || (month === 10 && day <= 22)) return zodiacSigns.libra;
    if ((month === 10 && day >= 23) || (month === 11 && day <= 21)) return zodiacSigns.scorpio;
    if ((month === 11 && day >= 22) || (month === 12 && day <= 21)) return zodiacSigns.sagittarius;
    if ((month === 12 && day >= 22) || (month === 1 && day <= 19)) return zodiacSigns.capricorn;
    if ((month === 1 && day >= 20) || (month === 2 && day <= 18)) return zodiacSigns.aquarius;
    return zodiacSigns.pisces;
  };

  // –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –≤–æ–∑—Ä–∞—Å—Ç–∞
  const getAge = (birthDate: string) => {
    const today = new Date();
    const birth = new Date(birthDate);
    let age = today.getFullYear() - birth.getFullYear();
    const monthDiff = today.getMonth() - birth.getMonth();
    
    if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birth.getDate())) {
      age--;
    }
    return age;
  };

  // –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –¥–Ω–µ–π –¥–æ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è
  const getDaysToBirthday = (birthDate: string) => {
    const today = new Date();
    const birth = new Date(birthDate);
    const thisYear = today.getFullYear();
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —ç—Ç–æ–º –≥–æ–¥—É
    const birthdayThisYear = new Date(thisYear, birth.getMonth(), birth.getDate());
    
    // –ï—Å–ª–∏ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è —É–∂–µ –ø—Ä–æ—à–µ–ª –≤ —ç—Ç–æ–º –≥–æ–¥—É, —Å—á–∏—Ç–∞–µ–º –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –≥–æ–¥–∞
    if (birthdayThisYear < today) {
      birthdayThisYear.setFullYear(thisYear + 1);
    }
    
    const diffTime = birthdayThisYear.getTime() - today.getTime();
    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
    
    return diffDays;
  };

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è
  const generateBirthdayWish = (user: UserProfile) => {
    const age = getAge(user.birthDate);
    const zodiac = getZodiacSign(user.birthDate);
    const isMale = user.gender === 'male';
    
    const wishes = isMale ? [
      `üéâ –° –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è, ${user.name}! –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å ${age}-–ª–µ—Ç–∏–µ–º! –ö–∞–∫ –Ω–∞—Å—Ç–æ—è—â–∏–π ${zodiac.name} (${zodiac.traits}), —Ç—ã –ø—Ä–æ–¥–æ–ª–∂–∞–µ—à—å –≤–¥–æ—Ö–Ω–æ–≤–ª—è—Ç—å –Ω–∞—Å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å. –ü—É—Å—Ç—å –Ω–æ–≤—ã–π –≥–æ–¥ –∂–∏–∑–Ω–∏ –ø—Ä–∏–Ω–µ—Å–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ –ø–æ–±–µ–¥ –∏ —Å–≤–µ—Ä—à–µ–Ω–∏–π! üöÄ`,
      
      `üéÇ –î–æ—Ä–æ–≥–æ–π ${user.name}! –û—Ç –≤—Å–µ–π –∫–æ–º–∞–Ω–¥—ã –ì–æ—Ä—Ö–æ–Ω –ø–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Ç–µ–±—è —Å ${age}-–ª–µ—Ç–∏–µ–º! –¢–≤–æ–π –∑–Ω–∞–∫ ${zodiac.name} ${zodiac.emoji} –Ω–∞–¥–µ–ª–∏–ª —Ç–µ–±—è —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω—ã–º–∏ –∫–∞—á–µ—Å—Ç–≤–∞–º–∏: ${zodiac.traits}. –ñ–µ–ª–∞–µ–º, —á—Ç–æ–±—ã –≤—Å–µ —Ç–≤–æ–∏ –ø–ª–∞–Ω—ã –≤–æ–ø–ª–æ—Ç–∏–ª–∏—Å—å –≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å! üåü`,
      
      `üéà –° –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–º, ${user.name}! ${age} –ª–µ—Ç - —ç—Ç–æ –æ—Ç–ª–∏—á–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç –¥–ª—è –Ω–æ–≤—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π! –ö–∞–∫ –∏—Å—Ç–∏–Ω–Ω—ã–π ${zodiac.name}, —Ç—ã –≤—Å–µ–≥–¥–∞ ${zodiac.traits}. –ü—É—Å—Ç—å —ç—Ç–æ—Ç –≥–æ–¥ —Å—Ç–∞–Ω–µ—Ç —Å–∞–º—ã–º —è—Ä–∫–∏–º –≤ —Ç–≤–æ–µ–π –∂–∏–∑–Ω–∏! üéØ`,
      
      `ü•≥ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è –Ω–∞—à–µ–≥–æ –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ–≥–æ ${user.name}! –í —Å–≤–æ–∏ ${age} –ª–µ—Ç —Ç—ã –ø–æ–∫–∞–∑—ã–≤–∞–µ—à—å –ª—É—á—à–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞ ${zodiac.name}: ${zodiac.traits}. –ö–æ–º–∞–Ω–¥–∞ –ì–æ—Ä—Ö–æ–Ω –∂–µ–ª–∞–µ—Ç —Ç–µ–±–µ –∑–¥–æ—Ä–æ–≤—å—è, —Å—á–∞—Å—Ç—å—è –∏ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –º–µ—á—Ç–∞–Ω–∏–π! üí´`
    ] : [
      `üéâ –° –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è, –¥–æ—Ä–æ–≥–∞—è ${user.name}! –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å ${age}-–ª–µ—Ç–∏–µ–º! –ö–∞–∫ –ø—Ä–µ–∫—Ä–∞—Å–Ω–∞—è ${zodiac.name} (${zodiac.traits}), —Ç—ã –æ—Å–≤–µ—â–∞–µ—à—å –Ω–∞—à –º–∏—Ä —Å–≤–æ–µ–π —ç–Ω–µ—Ä–≥–∏–µ–π. –ü—É—Å—Ç—å –Ω–æ–≤—ã–π –≥–æ–¥ –∂–∏–∑–Ω–∏ –±—É–¥–µ—Ç –ø–æ–ª–æ–Ω —Ä–∞–¥–æ—Å—Ç–∏ –∏ –≤–æ–ª—à–µ–±—Å—Ç–≤–∞! ‚ú®`,
      
      `üéÇ –ú–∏–ª–∞—è ${user.name}! –û—Ç –≤—Å–µ–π –∫–æ–º–∞–Ω–¥—ã –ì–æ—Ä—Ö–æ–Ω –ø–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Ç–µ–±—è —Å ${age}-–ª–µ—Ç–∏–µ–º! –¢–≤–æ–π –∑–Ω–∞–∫ ${zodiac.name} ${zodiac.emoji} –æ–¥–∞—Ä–∏–ª —Ç–µ–±—è –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–º–∏ –∫–∞—á–µ—Å—Ç–≤–∞–º–∏: ${zodiac.traits}. –ñ–µ–ª–∞–µ–º, —á—Ç–æ–±—ã –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –ø—Ä–∏–Ω–æ—Å–∏–ª –Ω–æ–≤—ã–µ –ø–æ–≤–æ–¥—ã –¥–ª—è —É–ª—ã–±–∫–∏! üå∏`,
      
      `üéà –° –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–º, –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–∞—è ${user.name}! ${age} –ª–µ—Ç - –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç –¥–ª—è –Ω–æ–≤—ã—Ö –æ—Ç–∫—Ä—ã—Ç–∏–π! –ö–∞–∫ –Ω–∞—Å—Ç–æ—è—â–∞—è ${zodiac.name}, —Ç—ã –≤—Å–µ–≥–¥–∞ ${zodiac.traits}. –ü—É—Å—Ç—å —ç—Ç–æ—Ç –≥–æ–¥ –ø–æ–¥–∞—Ä–∏—Ç —Ç–µ–±–µ –º–∞—Å—Å—É —Å—á–∞—Å—Ç–ª–∏–≤—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤! ü¶Ñ`,
      
      `ü•≥ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è –Ω–∞—à—É –ø—Ä–µ–∫—Ä–∞—Å–Ω—É—é ${user.name}! –í —Å–≤–æ–∏ ${age} –ª–µ—Ç —Ç—ã –≤–æ–ø–ª–æ—â–∞–µ—à—å –ª—É—á—à–∏–µ —á–µ—Ä—Ç—ã ${zodiac.name}: ${zodiac.traits}. –ö–æ–º–∞–Ω–¥–∞ –ì–æ—Ä—Ö–æ–Ω –∂–µ–ª–∞–µ—Ç —Ç–µ–±–µ –ª—é–±–≤–∏, –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è –∏ –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö –∂–µ–ª–∞–Ω–∏–π! üíù`
    ];

    return wishes[Math.floor(Math.random() * wishes.length)];
  };

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
  const generateReminder = (user: UserProfile, days: number) => {
    const zodiac = getZodiacSign(user.birthDate);
    const nextAge = getAge(user.birthDate) + 1;
    
    if (days <= 7) {
      return `üéä –°–∫–æ—Ä–æ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è —É ${user.name}! –ß–µ—Ä–µ–∑ ${days} ${days === 1 ? '–¥–µ–Ω—å' : days < 5 ? '–¥–Ω—è' : '–¥–Ω–µ–π'} –Ω–∞—à–µ–º—É ${zodiac.name} ${zodiac.emoji} –∏—Å–ø–æ–ª–Ω–∏—Ç—Å—è ${nextAge} ${nextAge % 10 === 1 && nextAge % 100 !== 11 ? '–≥–æ–¥' : nextAge % 10 < 5 && (nextAge % 100 < 10 || nextAge % 100 > 20) ? '–≥–æ–¥–∞' : '–ª–µ—Ç'}! –ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø–æ–∑–¥—Ä–∞–≤–∏—Ç—å! üéÅ`;
    }
    
    return `üìÖ –î–æ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è ${user.name} –æ—Å—Ç–∞–µ—Ç—Å—è ${days} –¥–Ω–µ–π. –ì–æ—Ç–æ–≤–∏–º—Å—è –ø–æ–∑–¥—Ä–∞–≤–∏—Ç—å –Ω–∞—à–µ–≥–æ –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è –∑–Ω–∞–∫–∞ ${zodiac.name}! üåü`;
  };

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π
  useEffect(() => {
    if (!user.birthDate) return;

    const savedWishes = localStorage.getItem(`wishes_${user.id}`);
    if (savedWishes) {
      setWishes(JSON.parse(savedWishes));
    }

    const daysToBirthday = getDaysToBirthday(user.birthDate);
    const today = new Date().toDateString();

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
    const existingTodayWish = wishes.find(w => 
      new Date(w.date).toDateString() === today && w.type === 'birthday'
    );

    // –ï—Å–ª–∏ —Å–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –∏ –µ—â–µ –Ω–µ—Ç –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è
    if (daysToBirthday === 0 && !existingTodayWish) {
      const birthdayWish: BirthdayWish = {
        id: `birthday_${Date.now()}`,
        message: generateBirthdayWish(user),
        date: new Date().toISOString(),
        from: '–ö–æ–º–∞–Ω–¥–∞ –ì–æ—Ä—Ö–æ–Ω Online üöÄ',
        type: 'birthday'
      };

      const newWishes = [birthdayWish, ...wishes];
      setWishes(newWishes);
      setTodayWish(birthdayWish);
      setShowWishModal(true);
      localStorage.setItem(`wishes_${user.id}`, JSON.stringify(newWishes));
    }

    // –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∑–∞ 7 –∏ 30 –¥–Ω–µ–π
    if ([7, 30].includes(daysToBirthday)) {
      const existingReminder = wishes.find(w => 
        new Date(w.date).toDateString() === today && w.type === 'reminder'
      );

      if (!existingReminder) {
        const reminderWish: BirthdayWish = {
          id: `reminder_${Date.now()}`,
          message: generateReminder(user, daysToBirthday),
          date: new Date().toISOString(),
          from: '–°–∏—Å—Ç–µ–º–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –ì–æ—Ä—Ö–æ–Ω üîî',
          type: 'reminder'
        };

        const newWishes = [reminderWish, ...wishes];
        setWishes(newWishes);
        localStorage.setItem(`wishes_${user.id}`, JSON.stringify(newWishes));
      }
    }
  }, [user, wishes]);

  const zodiac = user.birthDate ? getZodiacSign(user.birthDate) : null;
  const daysToBirthday = user.birthDate ? getDaysToBirthday(user.birthDate) : null;

  return (
    <>
      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–Ω–µ —Ä–æ–∂–¥–µ–Ω–∏—è */}
      {user.birthDate && (
        <div className="bg-gradient-to-r from-purple-50 to-pink-50 border border-purple-200 rounded-xl p-4">
          <div className="flex items-center justify-between mb-3">
            <h3 className="font-semibold text-gray-800 flex items-center gap-2">
              <Icon name="Gift" size={18} className="text-purple-600" />
              –î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è
            </h3>
            {wishes.length > 0 && (
              <button
                onClick={() => setShowWishModal(true)}
                className="text-sm text-purple-600 hover:text-purple-800 flex items-center gap-1"
              >
                <Icon name="MessageSquare" size={14} />
                {wishes.length} {wishes.length === 1 ? '—Å–æ–æ–±—â–µ–Ω–∏–µ' : '—Å–æ–æ–±—â–µ–Ω–∏–π'}
              </button>
            )}
          </div>

          <div className="space-y-3">
            {zodiac && (
              <div className="flex items-center gap-3">
                <span className="text-2xl">{zodiac.emoji}</span>
                <div>
                  <p className="font-medium text-gray-800">{zodiac.name}</p>
                  <p className="text-sm text-gray-600">{zodiac.traits}</p>
                </div>
              </div>
            )}

            {daysToBirthday !== null && (
              <div className="flex items-center gap-3">
                <span className="text-2xl">
                  {daysToBirthday === 0 ? 'üéâ' : daysToBirthday <= 7 ? 'üéÇ' : 'üìÖ'}
                </span>
                <div>
                  <p className="font-medium text-gray-800">
                    {daysToBirthday === 0 
                      ? '–°–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è!' 
                      : `–î–æ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è: ${daysToBirthday} ${daysToBirthday === 1 ? '–¥–µ–Ω—å' : daysToBirthday < 5 ? '–¥–Ω—è' : '–¥–Ω–µ–π'}`
                    }
                  </p>
                  <p className="text-sm text-gray-600">
                    {getAge(user.birthDate)} {getAge(user.birthDate) % 10 === 1 && getAge(user.birthDate) % 100 !== 11 ? '–≥–æ–¥' : getAge(user.birthDate) % 10 < 5 && (getAge(user.birthDate) % 100 < 10 || getAge(user.birthDate) % 100 > 20) ? '–≥–æ–¥–∞' : '–ª–µ—Ç'}
                  </p>
                </div>
              </div>
            )}
          </div>
        </div>
      )}

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π */}
      {showWishModal && (
        <div className="fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4">
          <div className="bg-white rounded-2xl max-w-lg w-full max-h-[80vh] overflow-y-auto">
            <div className="p-6">
              <div className="flex items-center justify-between mb-6">
                <h2 className="text-xl font-bold text-gray-800 flex items-center gap-2">
                  <Icon name="Gift" size={24} className="text-purple-600" />
                  –ü–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç –∫–æ–º–∞–Ω–¥—ã
                </h2>
                <button
                  onClick={() => setShowWishModal(false)}
                  className="p-2 hover:bg-gray-100 rounded-lg transition-colors"
                >
                  <Icon name="X" size={20} className="text-gray-500" />
                </button>
              </div>

              <div className="space-y-4">
                {wishes.map((wish) => (
                  <div
                    key={wish.id}
                    className={`p-4 rounded-xl border-2 ${
                      wish.type === 'birthday' 
                        ? 'bg-gradient-to-r from-pink-50 to-purple-50 border-pink-200' 
                        : 'bg-blue-50 border-blue-200'
                    }`}
                  >
                    <div className="flex items-start justify-between mb-2">
                      <p className="font-medium text-sm text-gray-600">{wish.from}</p>
                      <p className="text-xs text-gray-500">
                        {new Date(wish.date).toLocaleDateString('ru-RU')}
                      </p>
                    </div>
                    <p className="text-gray-800 leading-relaxed">{wish.message}</p>
                  </div>
                ))}
              </div>

              {daysToBirthday === 0 && todayWish && (
                <div className="mt-6 text-center">
                  <div className="text-4xl mb-2">üéä</div>
                  <button
                    onClick={() => {
                      // –ü—Ä–æ—Å—Ç–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –∫–æ–Ω—Ñ–µ—Ç—Ç–∏
                      const colors = ['#ff69b4', '#ff1493', '#ffd700', '#00ff00', '#00bfff'];
                      for (let i = 0; i < 50; i++) {
                        setTimeout(() => {
                          const confetti = document.createElement('div');
                          confetti.style.position = 'fixed';
                          confetti.style.left = Math.random() * 100 + 'vw';
                          confetti.style.top = '-10px';
                          confetti.style.width = '10px';
                          confetti.style.height = '10px';
                          confetti.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];
                          confetti.style.borderRadius = '50%';
                          confetti.style.pointerEvents = 'none';
                          confetti.style.animation = 'fall 3s linear forwards';
                          document.body.appendChild(confetti);
                          
                          setTimeout(() => confetti.remove(), 3000);
                        }, i * 50);
                      }
                    }}
                    className="px-4 py-2 bg-gradient-to-r from-pink-500 to-purple-500 text-white rounded-lg hover:from-pink-600 hover:to-purple-600 transition-all"
                  >
                    –ó–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ñ–µ—Ç—Ç–∏! üéâ
                  </button>
                </div>
              )}
            </div>
          </div>
        </div>
      )}

      <style>{`
        @keyframes fall {
          to {
            transform: translateY(100vh) rotate(720deg);
          }
        }
      `}</style>
    </>
  );
};

export default BirthdayWishesAI;