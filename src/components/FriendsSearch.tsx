import { useState } from 'react';
import Icon from '@/components/ui/icon';
import { ResidentProfile } from '@/hooks/useSocialNetwork';

interface FriendsSearchProps {
  searchResults: ResidentProfile[];
  onSearch: (query: string) => void;
  onSendRequest: (userId: string) => void;
  getFriendshipStatus: (userId: string) => 'friends' | 'request_sent' | 'request_received' | 'none';
  onAcceptRequest: (userId: string) => void;
  onViewProfile: (user: ResidentProfile) => void;
}

const FriendsSearch = ({ 
  searchResults, 
  onSearch, 
  onSendRequest, 
  getFriendshipStatus,
  onAcceptRequest,
  onViewProfile
}: FriendsSearchProps) => {
  const [searchQuery, setSearchQuery] = useState('');
  const [isSearching, setIsSearching] = useState(false);

  const handleSearch = (e: React.FormEvent) => {
    e.preventDefault();
    if (searchQuery.trim()) {
      setIsSearching(true);
      onSearch(searchQuery);
      setTimeout(() => setIsSearching(false), 500);
    }
  };

  const getAvatarEmoji = (avatar: string): string => {
    const avatarMap: Record<string, string> = {
      default_male: 'üë®',
      default_female: 'üë©',
      businessman: 'üë®‚Äçüíº',
      businesswoman: 'üë©‚Äçüíº',
      worker: 'üë®‚Äçüîß',
      worker_woman: 'üë©‚Äçüîß',
      farmer: 'üë®‚Äçüåæ',
      farmer_woman: 'üë©‚Äçüåæ',
      teacher: 'üë®‚Äçüè´',
      teacher_woman: 'üë©‚Äçüè´',
      doctor: 'üë®‚Äç‚öïÔ∏è',
      doctor_woman: 'üë©‚Äç‚öïÔ∏è',
      artist: 'üë®‚Äçüé®',
      artist_woman: 'üë©‚Äçüé®',
      chef: 'üë®‚Äçüç≥',
      chef_woman: 'üë©‚Äçüç≥',
      oldman: 'üë¥',
      oldwoman: 'üëµ',
      boy: 'üë¶',
      girl: 'üëß'
    };
    return avatarMap[avatar] || 'üë§';
  };

  const renderActionButton = (user: ResidentProfile) => {
    const status = getFriendshipStatus(user.id);
    
    switch (status) {
      case 'friends':
        return (
          <button
            disabled
            className="px-3 py-1 bg-green-100 text-green-700 rounded-full text-sm flex items-center gap-1"
          >
            <Icon name="UserCheck" size={14} />
            <span>–í –¥—Ä—É–∑—å—è—Ö</span>
          </button>
        );
      case 'request_sent':
        return (
          <button
            disabled
            className="px-3 py-1 bg-blue-100 text-blue-700 rounded-full text-sm flex items-center gap-1"
          >
            <Icon name="Clock" size={14} />
            <span>–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞</span>
          </button>
        );
      case 'request_received':
        return (
          <button
            onClick={() => onAcceptRequest(user.id)}
            className="px-3 py-1 bg-gorkhon-pink text-white rounded-full text-sm hover:bg-gorkhon-pink/90 transition-colors flex items-center gap-1"
          >
            <Icon name="UserPlus" size={14} />
            <span>–ü—Ä–∏–Ω—è—Ç—å –∑–∞—è–≤–∫—É</span>
          </button>
        );
      default:
        return (
          <button
            onClick={() => onSendRequest(user.id)}
            className="px-3 py-1 bg-gorkhon-blue text-white rounded-full text-sm hover:bg-gorkhon-blue/90 transition-colors flex items-center gap-1"
          >
            <Icon name="UserPlus" size={14} />
            <span>–î–æ–±–∞–≤–∏—Ç—å</span>
          </button>
        );
    }
  };

  return (
    <div className="space-y-6">
      {/* –ü–æ–∏—Å–∫ */}
      <form onSubmit={handleSearch} className="relative">
        <div className="relative">
          <Icon 
            name="Search" 
            size={20} 
            className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400" 
          />
          <input
            type="text"
            value={searchQuery}
            onChange={(e) => setSearchQuery(e.target.value)}
            placeholder="–ü–æ–∏—Å–∫ –∂–∏—Ç–µ–ª–µ–π –ø–æ –∏–º–µ–Ω–∏ –∏–ª–∏ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º..."
            className="w-full pl-10 pr-24 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-gorkhon-pink focus:border-transparent transition-all"
          />
          <button
            type="submit"
            className="absolute right-2 top-1/2 transform -translate-y-1/2 px-4 py-1.5 bg-gorkhon-pink text-white rounded-lg text-sm hover:bg-gorkhon-pink/90 transition-colors"
          >
            –ù–∞–π—Ç–∏
          </button>
        </div>
      </form>

      {/* –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ */}
      {isSearching ? (
        <div className="flex items-center justify-center py-8">
          <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-gorkhon-pink"></div>
        </div>
      ) : searchQuery && searchResults.length === 0 ? (
        <div className="text-center py-8">
          <Icon name="Users" size={48} className="text-gray-300 mx-auto mb-3" />
          <p className="text-gray-500">–ü–æ –∑–∞–ø—Ä–æ—Å—É "{searchQuery}" –Ω–∏–∫–æ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</p>
          <p className="text-sm text-gray-400 mt-1">–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å</p>
        </div>
      ) : searchResults.length > 0 ? (
        <div className="space-y-3">
          <div className="text-sm text-gray-600 mb-3">
            –ù–∞–π–¥–µ–Ω–æ –∂–∏—Ç–µ–ª–µ–π: {searchResults.length}
          </div>
          {searchResults.map((user) => (
            <div
              key={user.id}
              className="bg-white rounded-xl p-4 border border-gray-200 hover:border-gorkhon-pink/30 transition-all"
            >
              <div className="flex items-center gap-4">
                {/* –ê–≤–∞—Ç–∞—Ä */}
                <button
                  onClick={() => onViewProfile(user)}
                  className="flex-shrink-0 w-12 h-12 bg-gray-100 rounded-full flex items-center justify-center text-2xl hover:scale-110 transition-transform"
                >
                  {user.avatar.startsWith('data:') ? (
                    <img 
                      src={user.avatar} 
                      alt={user.name}
                      className="w-full h-full rounded-full object-cover"
                    />
                  ) : (
                    getAvatarEmoji(user.avatar)
                  )}
                </button>

                {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                <div className="flex-1 min-w-0">
                  <button
                    onClick={() => onViewProfile(user)}
                    className="font-medium text-gray-800 hover:text-gorkhon-pink transition-colors text-left"
                  >
                    {user.name}
                  </button>
                  {user.status && (
                    <p className="text-sm text-gray-500 truncate">{user.status}</p>
                  )}
                  {user.interests && user.interests.length > 0 && (
                    <div className="flex flex-wrap gap-1 mt-1">
                      {user.interests.slice(0, 3).map((interest, idx) => (
                        <span 
                          key={idx}
                          className="text-xs px-2 py-0.5 bg-gray-100 text-gray-600 rounded-full"
                        >
                          {interest}
                        </span>
                      ))}
                      {user.interests.length > 3 && (
                        <span className="text-xs text-gray-400">
                          +{user.interests.length - 3}
                        </span>
                      )}
                    </div>
                  )}
                </div>

                {/* –°—Ç–∞—Ç—É—Å –æ–Ω–ª–∞–π–Ω */}
                <div className="flex items-center gap-3">
                  {user.isOnline && (
                    <div className="flex items-center gap-1 text-green-600">
                      <div className="w-2 h-2 bg-green-600 rounded-full animate-pulse"></div>
                      <span className="text-xs">–æ–Ω–ª–∞–π–Ω</span>
                    </div>
                  )}
                  
                  {/* –ö–Ω–æ–ø–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è */}
                  {renderActionButton(user)}
                </div>
              </div>
            </div>
          ))}
        </div>
      ) : (
        <div className="text-center py-8">
          <Icon name="Search" size={48} className="text-gray-300 mx-auto mb-3" />
          <p className="text-gray-500">–ù–∞—á–Ω–∏—Ç–µ –ø–æ–∏—Å–∫, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –¥—Ä—É–≥–∏—Ö –∂–∏—Ç–µ–ª–µ–π</p>
          <p className="text-sm text-gray-400 mt-1">–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∏–ª–∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã</p>
        </div>
      )}
    </div>
  );
};

export default FriendsSearch;