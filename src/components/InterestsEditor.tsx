import { useState, useEffect } from 'react';
import Icon from '@/components/ui/icon';

interface InterestsEditorProps {
  interests: string[];
  onSave: (interests: string[]) => void;
  onCancel: () => void;
}

const InterestsEditor = ({ interests, onSave, onCancel }: InterestsEditorProps) => {
  const [userInterests, setUserInterests] = useState<string[]>(interests);
  const [newInterest, setNewInterest] = useState('');

  const popularInterests = [
    'üè° –î–æ–º –∏ —É—é—Ç',
    'üå± –°–∞–¥–æ–≤–æ–¥—Å—Ç–≤–æ',
    'üé£ –†—ã–±–∞–ª–∫–∞',
    'ü•ò –ö—É–ª–∏–Ω–∞—Ä–∏—è',
    'üé® –¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ',
    'üèÉ‚Äç‚ôÇÔ∏è –°–ø–æ—Ä—Ç',
    'üìö –ß—Ç–µ–Ω–∏–µ',
    'üéµ –ú—É–∑—ã–∫–∞',
    'üéÆ –ò–≥—Ä—ã',
    'üöó –ê–≤—Ç–æ–º–æ–±–∏–ª–∏',
    'üõ†Ô∏è –†—É–∫–æ–¥–µ–ª–∏–µ',
    'üì± –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏',
    'üé≠ –¢–µ–∞—Ç—Ä',
    'üé¨ –ö–∏–Ω–æ',
    '‚úàÔ∏è –ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è',
    'üêï –ñ–∏–≤–æ—Ç–Ω—ã–µ',
    'üíº –ë–∏–∑–Ω–µ—Å',
    'üèûÔ∏è –ü—Ä–∏—Ä–æ–¥–∞',
    'üì∏ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è',
    'üèãÔ∏è‚Äç‚ôÄÔ∏è –§–∏—Ç–Ω–µ—Å'
  ];

  const addInterest = (interest: string) => {
    if (!userInterests.includes(interest) && userInterests.length < 10) {
      setUserInterests([...userInterests, interest]);
    }
  };

  const removeInterest = (interest: string) => {
    setUserInterests(userInterests.filter(i => i !== interest));
  };

  const handleAddCustomInterest = () => {
    if (newInterest.trim() && !userInterests.includes(newInterest.trim()) && userInterests.length < 10) {
      setUserInterests([...userInterests, newInterest.trim()]);
      setNewInterest('');
    }
  };

  const handleKeyPress = (e: React.KeyboardEvent) => {
    if (e.key === 'Enter') {
      handleAddCustomInterest();
    }
  };

  return (
    <div className="space-y-6">
      <div className="text-center">
        <h3 className="text-lg font-semibold text-gray-800 mb-2">–í–∞—à–∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã</h3>
        <p className="text-sm text-gray-600">–î–æ–±–∞–≤—å—Ç–µ –¥–æ 10 –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤, —á—Ç–æ–±—ã –¥—Ä—É–≥–∏–µ –∂–∏—Ç–µ–ª–∏ –º–æ–≥–ª–∏ –≤–∞—Å –Ω–∞–π—Ç–∏</p>
      </div>

      {/* –í—ã–±—Ä–∞–Ω–Ω—ã–µ –∏–Ω—Ç–µ—Ä–µ—Å—ã */}
      {userInterests.length > 0 && (
        <div>
          <h4 className="font-medium text-gray-700 mb-3">–í—ã–±—Ä–∞–Ω–Ω—ã–µ –∏–Ω—Ç–µ—Ä–µ—Å—ã ({userInterests.length}/10):</h4>
          <div className="flex flex-wrap gap-2">
            {userInterests.map((interest, idx) => (
              <button
                key={idx}
                onClick={() => removeInterest(interest)}
                className="flex items-center gap-1 px-3 py-1 bg-gorkhon-pink text-white rounded-full text-sm hover:bg-gorkhon-pink/90 transition-colors"
              >
                <span>{interest}</span>
                <Icon name="X" size={14} />
              </button>
            ))}
          </div>
        </div>
      )}

      {/* –î–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–π –∏–Ω—Ç–µ—Ä–µ—Å */}
      {userInterests.length < 10 && (
        <div>
          <h4 className="font-medium text-gray-700 mb-3">–î–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–π –∏–Ω—Ç–µ—Ä–µ—Å:</h4>
          <div className="flex gap-2">
            <input
              type="text"
              value={newInterest}
              onChange={(e) => setNewInterest(e.target.value)}
              onKeyPress={handleKeyPress}
              placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∏–Ω—Ç–µ—Ä–µ—Å..."
              className="flex-1 px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-gorkhon-pink focus:border-transparent"
            />
            <button
              onClick={handleAddCustomInterest}
              disabled={!newInterest.trim() || userInterests.includes(newInterest.trim())}
              className="px-4 py-2 bg-gorkhon-blue text-white rounded-lg hover:bg-gorkhon-blue/90 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors"
            >
              <Icon name="Plus" size={16} />
            </button>
          </div>
        </div>
      )}

      {/* –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∏–Ω—Ç–µ—Ä–µ—Å—ã */}
      {userInterests.length < 10 && (
        <div>
          <h4 className="font-medium text-gray-700 mb-3">–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∏–Ω—Ç–µ—Ä–µ—Å—ã:</h4>
          <div className="grid grid-cols-2 gap-2 max-h-48 overflow-y-auto">
            {popularInterests
              .filter(interest => !userInterests.includes(interest))
              .map((interest, idx) => (
                <button
                  key={idx}
                  onClick={() => addInterest(interest)}
                  className="text-left px-3 py-2 bg-gray-100 hover:bg-gorkhon-pink/10 hover:text-gorkhon-pink rounded-lg transition-colors text-sm"
                >
                  {interest}
                </button>
              ))
            }
          </div>
        </div>
      )}

      {/* –ö–Ω–æ–ø–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è */}
      <div className="flex gap-3 pt-4 border-t border-gray-200">
        <button
          onClick={() => onSave(userInterests)}
          className="flex-1 px-4 py-2 bg-gorkhon-pink text-white rounded-lg hover:bg-gorkhon-pink/90 transition-colors font-medium"
        >
          –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
        </button>
        <button
          onClick={onCancel}
          className="px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors"
        >
          –û—Ç–º–µ–Ω–∞
        </button>
      </div>
    </div>
  );
};

export default InterestsEditor;