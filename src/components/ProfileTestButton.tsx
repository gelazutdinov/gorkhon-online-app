import { useState } from 'react';
import { useAuth } from '@/hooks/useAuth';
import Icon from '@/components/ui/icon';

const ProfileTestButton = () => {
  const { user, updateProfile, reloadUser } = useAuth();
  const [logs, setLogs] = useState<string[]>([]);

  const log = (message: string) => {
    const timestamp = new Date().toLocaleTimeString();
    const logMessage = `${timestamp}: ${message}`;
    console.log(logMessage);
    setLogs(prev => [...prev, logMessage]);
  };

  const testProfileUpdate = async () => {
    log('üß™ –¢–µ—Å—Ç–∏—Ä—É—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è...');
    
    if (!user) {
      log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
      return;
    }

    // –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    const testUpdates = {
      name: '–¢–µ—Å—Ç–æ–≤–æ–µ –ò–º—è',
      phone: '+7 999 123 45 67',
      birthDate: '1990-05-15'
    };

    log(`üìù –û–±–Ω–æ–≤–ª—è—é –ø—Ä–æ—Ñ–∏–ª—å: ${JSON.stringify(testUpdates)}`);

    try {
      const result = await updateProfile(testUpdates);
      
      if (result.success) {
        log('‚úÖ updateProfile –≤–µ—Ä–Ω—É–ª —É—Å–ø–µ—Ö');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º localStorage
        const savedUser = localStorage.getItem('currentUser');
        if (savedUser) {
          const userData = JSON.parse(savedUser);
          log(`üíæ –í localStorage: name=${userData.name}, phone=${userData.phone}`);
        } else {
          log('‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ localStorage!');
        }
        
        // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const reloadResult = reloadUser();
        if (reloadResult.success) {
          log('üîÑ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω—ã');
        }
        
      } else {
        log(`‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ${result.error}`);
      }
    } catch (error) {
      log(`üí• –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: ${error}`);
    }
  };

  const checkCurrentData = () => {
    log('üîç –ü—Ä–æ–≤–µ—Ä—è—é —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:');
    log(`  - name: ${user?.name}`);
    log(`  - phone: ${user?.phone}`);
    log(`  - birthDate: ${user?.birthDate}`);
    
    const savedUser = localStorage.getItem('currentUser');
    if (savedUser) {
      try {
        const userData = JSON.parse(savedUser);
        log('üíæ –í localStorage:');
        log(`  - name: ${userData.name}`);
        log(`  - phone: ${userData.phone}`);
        log(`  - birthDate: ${userData.birthDate}`);
      } catch (error) {
        log('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è localStorage');
      }
    } else {
      log('‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ localStorage');
    }
  };

  if (!user) {
    return (
      <div className="p-4 bg-yellow-50 border border-yellow-200 rounded-lg">
        <p className="text-yellow-800">‚ö†Ô∏è –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è</p>
      </div>
    );
  }

  return (
    <div className="max-w-2xl mx-auto p-6 bg-white rounded-lg shadow-lg">
      <h2 className="text-xl font-bold mb-4 text-center">üß™ –¢–µ—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è</h2>
      
      <div className="grid md:grid-cols-2 gap-6">
        {/* –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
        <div className="space-y-3">
          <div>
            <h3 className="font-medium mb-2">–¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</h3>
            <div className="bg-gray-50 p-3 rounded-lg text-sm">
              <p>–ò–º—è: <strong>{user.name}</strong></p>
              <p>Email: <strong>{user.email}</strong></p>
              <p>–¢–µ–ª–µ—Ñ–æ–Ω: <strong>{user.phone || '–Ω–µ —É–∫–∞–∑–∞–Ω'}</strong></p>
            </div>
          </div>

          <div className="flex flex-wrap gap-2">
            <button
              onClick={testProfileUpdate}
              className="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg flex items-center gap-2 text-sm"
            >
              <Icon name="Edit" size={16} />
              –¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            </button>
            
            <button
              onClick={checkCurrentData}
              className="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg flex items-center gap-2 text-sm"
            >
              <Icon name="Search" size={16} />
              –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
            </button>
            
            <button
              onClick={() => setLogs([])}
              className="bg-gray-600 hover:bg-gray-700 text-white px-4 py-2 rounded-lg flex items-center gap-2 text-sm"
            >
              <Icon name="Trash2" size={16} />
              –û—á–∏—Å—Ç–∏—Ç—å
            </button>
          </div>
        </div>

        {/* –õ–æ–≥–∏ */}
        <div>
          <h3 className="font-medium mb-2">–õ–æ–≥–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:</h3>
          <div className="bg-gray-50 rounded-lg p-4 max-h-80 overflow-y-auto">
            {logs.length === 0 ? (
              <p className="text-gray-500 text-sm">–õ–æ–≥–∏ –ø–æ—è–≤—è—Ç—Å—è –∑–¥–µ—Å—å</p>
            ) : (
              <div className="space-y-1">
                {logs.map((log, index) => (
                  <div 
                    key={index} 
                    className={`text-xs font-mono p-2 rounded ${
                      log.includes('‚úÖ') ? 'bg-green-100 text-green-800' :
                      log.includes('‚ùå') ? 'bg-red-100 text-red-800' :
                      log.includes('üîç') ? 'bg-blue-100 text-blue-800' :
                      'bg-gray-100'
                    }`}
                  >
                    {log}
                  </div>
                ))}
              </div>
            )}
          </div>
        </div>
      </div>
      
      {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è */}
      <div className="mt-6 p-4 bg-blue-50 rounded-lg">
        <h4 className="font-medium mb-2">üìã –ö–∞–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å:</h4>
        <ol className="text-sm space-y-1 list-decimal list-inside">
          <li>–ù–∞–∂–º–∏—Ç–µ "–¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è" - –∏–∑–º–µ–Ω–∏—Ç –∏–º—è, —Ç–µ–ª–µ—Ñ–æ–Ω –∏ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è</li>
          <li>–ù–∞–∂–º–∏—Ç–µ "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–∞–Ω–Ω—ã–µ" - –ø–æ–∫–∞–∂–µ—Ç —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ</li>
          <li>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å –≤ localStorage</li>
          <li>–û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É - –¥–∞–Ω–Ω—ã–µ –¥–æ–ª–∂–Ω—ã –æ—Å—Ç–∞—Ç—å—Å—è</li>
        </ol>
      </div>
    </div>
  );
};

export default ProfileTestButton;