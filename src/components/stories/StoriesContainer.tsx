import { useState, useEffect, useRef } from 'react';
import { createPortal } from 'react-dom';
import Icon from '@/components/ui/icon';

interface Story {
  id: string;
  title: string;
  backgroundImage: string;
  createdAt: number;
  expiresAt: number;
}

const StoriesContainer = () => {
  const [stories, setStories] = useState<Story[]>([]);
  const [activeStory, setActiveStory] = useState<Story | null>(null);
  const [isModalOpen, setIsModalOpen] = useState(false);
  const storyTimerRef = useRef<NodeJS.Timeout | null>(null);

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º stories –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  useEffect(() => {
    const now = Date.now();
    const STORY_ID = 'weather-beta-release-gorhon-online';
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º localStorage –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —ç—Ç–æ–π stories
    const savedStories = localStorage.getItem('platform-stories');
    let existingStories: Story[] = [];
    
    if (savedStories) {
      try {
        existingStories = JSON.parse(savedStories);
        // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –Ω–µ –∏—Å—Ç–µ–∫—à–∏–µ stories
        existingStories = existingStories.filter(story => story.expiresAt > now);
      } catch (e) {
        console.error('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ stories –∏–∑ localStorage:', e);
        existingStories = [];
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –Ω–∞—à–∞ story
    const hasWeatherStory = existingStories.some(story => story.id === STORY_ID);
    
    if (!hasWeatherStory) {
      // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é story –µ—Å–ª–∏ –µ—ë –µ—â–µ –Ω–µ—Ç
      const expiryTime = now + (24 * 60 * 60 * 1000); // 24 —á–∞—Å–∞
      const weatherStory: Story = {
        id: STORY_ID,
        title: '–¢–µ–ø–µ—Ä—å –∏ –ø–æ–≥–æ–¥–∞ –µ—Å—Ç—å',
        backgroundImage: 'https://cdn.poehali.dev/files/458c390f-ac64-41e1-bb68-f699667bb38b.png',
        createdAt: now,
        expiresAt: expiryTime
      };
      
      existingStories.push(weatherStory);
      console.log('üöÄ –ù–æ–≤–∞—è Stories —Å–æ–∑–¥–∞–Ω–∞ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', weatherStory);
    } else {
      console.log('üì± Stories —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é');
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º stories
    localStorage.setItem('platform-stories', JSON.stringify(existingStories));
    setStories(existingStories);
  }, []);

  // –û—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–µ–∫—à–∏—Ö stories –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
  useEffect(() => {
    const interval = setInterval(() => {
      const now = Date.now();
      const activeStories = stories.filter(story => story.expiresAt > now);
      
      if (activeStories.length !== stories.length) {
        setStories(activeStories);
        localStorage.setItem('platform-stories', JSON.stringify(activeStories));
        
        if (activeStories.length === 0) {
          console.log('üóëÔ∏è –í—Å–µ Stories –∏—Å—Ç–µ–∫–ª–∏ –∏ –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã');
        } else {
          console.log(`üì± –£–¥–∞–ª–µ–Ω–æ ${stories.length - activeStories.length} –∏—Å—Ç–µ–∫—à–∏—Ö Stories`);
        }
      }
    }, 60000); // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É

    return () => clearInterval(interval);
  }, [stories]);

  const openStory = (story: Story) => {
    console.log('üé¨ –û—Ç–∫—Ä—ã–≤–∞–µ–º Stories:', story);
    setActiveStory(story);
    setIsModalOpen(true);
    
    // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–∞–π–º–µ—Ä –µ—Å–ª–∏ –µ—Å—Ç—å
    if (storyTimerRef.current) {
      clearTimeout(storyTimerRef.current);
    }
    
    // –ê–≤—Ç–æ–∑–∞–∫—Ä—ã—Ç–∏–µ —á–µ—Ä–µ–∑ 15 —Å–µ–∫—É–Ω–¥
    storyTimerRef.current = setTimeout(() => {
      console.log('‚è∞ –ê–≤—Ç–æ–∑–∞–∫—Ä—ã—Ç–∏–µ Stories —á–µ—Ä–µ–∑ 15 —Å–µ–∫');
      closeStory();
    }, 15000);
  };

  const closeStory = () => {
    console.log('‚ùå –ó–∞–∫—Ä—ã–≤–∞–µ–º Stories');
    setActiveStory(null);
    setIsModalOpen(false);
    
    // –û—á–∏—â–∞–µ–º —Ç–∞–π–º–µ—Ä –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏
    if (storyTimerRef.current) {
      clearTimeout(storyTimerRef.current);
      storyTimerRef.current = null;
    }
  };

  const getTimeRemaining = (expiresAt: number) => {
    const now = Date.now();
    const remaining = expiresAt - now;
    
    if (remaining <= 0) return '–ò—Å—Ç–µ–∫–ª–∞';
    
    const hours = Math.floor(remaining / (60 * 60 * 1000));
    const minutes = Math.floor((remaining % (60 * 60 * 1000)) / (60 * 1000));
    
    if (hours > 0) {
      return `${hours}—á ${minutes}–º`;
    } else if (minutes > 0) {
      return `${minutes}–º`;
    } else {
      return '–ú–µ–Ω—å—à–µ –º–∏–Ω—É—Ç—ã';
    }
  };

  const getProgressPercentage = (createdAt: number, expiresAt: number) => {
    const now = Date.now();
    const total = expiresAt - createdAt;
    const elapsed = now - createdAt;
    return Math.min((elapsed / total) * 100, 100);
  };

  if (stories.length === 0) {
    return null;
  }

  return (
    <>
      {/* VK-style Stories */}
      <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-4 mb-4">
        <div className="flex gap-4 overflow-x-auto scrollbar-hide">
          {stories.map((story) => (
            <div
              key={story.id}
              onClick={() => openStory(story)}
              className="flex-shrink-0 cursor-pointer flex flex-col items-center"
            >
              {/* VK-style Story Avatar */}
              <div className="relative">
                <div className="w-14 h-14 rounded-full p-0.5 bg-gradient-to-br from-blue-500 to-blue-600">
                  <div className="w-full h-full rounded-full bg-white p-0.5">
                    <div 
                      className="w-full h-full rounded-full bg-cover bg-center overflow-hidden"
                      style={{ backgroundImage: `url(${story.backgroundImage})` }}
                    >
                      <div className="w-full h-full bg-black bg-opacity-10 flex items-center justify-center">
                        <Icon name="CloudSun" size={16} className="text-white" />
                      </div>
                    </div>
                  </div>
                </div>
                
                {/* VK-style Online Badge */}
                <div className="absolute -bottom-0.5 -right-0.5 w-4 h-4 bg-green-500 rounded-full border-2 border-white"></div>
              </div>
              
              {/* VK-style Story Label */}
              <p className="text-xs text-gray-700 mt-2 text-center w-14 truncate font-medium">
                –ì–æ—Ä—Ö–æ–Ω
              </p>
            </div>
          ))}
        </div>
      </div>

      {/* Story Modal - Rendered in portal to ensure it's on top */}
      {isModalOpen && activeStory && createPortal(
        <div 
          className="fixed inset-0 z-[9999] bg-black bg-opacity-90 flex items-center justify-center"
          onClick={closeStory}
        >
          {/* Story Container with mobile aspect ratio 9:16 for all devices */}
          <div 
            className="relative w-full h-full max-w-[400px] max-h-[711px] sm:w-[400px] sm:h-[711px] rounded-lg overflow-hidden shadow-2xl"
            style={{
              backgroundImage: `url(${activeStory.backgroundImage})`,
              backgroundSize: 'cover',
              backgroundPosition: 'center',
              backgroundRepeat: 'no-repeat',
              aspectRatio: '9/16'
            }}
            onClick={(e) => e.stopPropagation()}
          >
            {/* Progress Bar */}
            <div className="absolute top-4 left-4 right-4 h-1 bg-white bg-opacity-30 rounded-full">
              <div 
                className="h-full bg-white transition-all duration-100 rounded-full"
                style={{ 
                  width: `${getProgressPercentage(activeStory.createdAt, activeStory.expiresAt)}%` 
                }}
              />
            </div>

            {/* Close Button - back to top right */}
            <button
              onClick={closeStory}
              className="absolute top-4 right-4 z-10 text-white hover:text-gray-300 bg-black bg-opacity-20 rounded-full p-2"
            >
              <Icon name="X" size={20} />
            </button>

            {/* Bottom Action Area - positioned at the very bottom */}
            <div className="absolute bottom-6 left-4 right-4">
              <button
                onClick={() => {
                  closeStory();
                  // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É –ø–æ–≥–æ–¥—ã
                  const event = new CustomEvent('navigate-to-weather');
                  window.dispatchEvent(event);
                }}
                className="w-full bg-white bg-opacity-90 backdrop-blur-sm text-gray-900 py-4 px-6 rounded-2xl font-medium hover:bg-opacity-100 transition-all duration-200 shadow-lg"
              >
                –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–≥–æ–¥—É üå§Ô∏è
              </button>
            </div>
          </div>
        </div>,
        document.body
      )}
    </>
  );
};

export default StoriesContainer;