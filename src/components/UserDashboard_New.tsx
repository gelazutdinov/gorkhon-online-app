import { useState } from 'react';
import { useAuth } from '@/hooks/useAuth';
import Icon from '@/components/ui/icon';
import ProfileEditModal from '@/components/ProfileEditModal';
import UserManagement from '@/components/admin/UserManagement';

const UserDashboard_New = () => {
  const { user, logout, updateProfile, isAdmin } = useAuth();
  const [showProfileEdit, setShowProfileEdit] = useState(false);
  const [showAdminPanel, setShowAdminPanel] = useState(false);

  if (!user) return null;

  const handleLogout = async () => {
    await logout();
  };

  const handleProfileUpdate = async (updates: any) => {
    await updateProfile(updates);
  };

  return (
    <div className="max-w-6xl mx-auto p-4 space-y-6">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ–º */}
      <div className="bg-white rounded-xl shadow-lg p-6">
        <div className="flex items-center justify-between mb-4">
          <div className="flex items-center gap-4">
            <div className="w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center text-2xl">
              {user.avatar || (user.gender === 'female' ? 'üë©' : 'üë®')}
            </div>
            <div>
              <h1 className="text-2xl font-bold text-gray-900">
                –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.name}!
              </h1>
              <p className="text-gray-600">{user.email}</p>
              {isAdmin && (
                <span className="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-purple-100 text-purple-800">
                  <Icon name="Shield" className="w-3 h-3 mr-1" />
                  –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
                </span>
              )}
            </div>
          </div>
          <button
            onClick={handleLogout}
            className="flex items-center gap-2 px-4 py-2 text-gray-600 hover:text-gray-800 hover:bg-gray-100 rounded-lg transition-colors"
          >
            <Icon name="LogOut" className="w-4 h-4" />
            –í—ã–π—Ç–∏
          </button>
        </div>

        {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
          <button
            onClick={() => setShowProfileEdit(true)}
            className="flex items-center gap-3 p-4 bg-blue-50 hover:bg-blue-100 rounded-lg transition-colors"
          >
            <Icon name="User" className="w-5 h-5 text-blue-600" />
            <div className="text-left">
              <p className="font-medium text-gray-900">–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å</p>
              <p className="text-sm text-gray-600">–ò–∑–º–µ–Ω–∏—Ç—å –ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</p>
            </div>
          </button>

          <button className="flex items-center gap-3 p-4 bg-green-50 hover:bg-green-100 rounded-lg transition-colors">
            <Icon name="Settings" className="w-5 h-5 text-green-600" />
            <div className="text-left">
              <p className="font-medium text-gray-900">–ù–∞—Å—Ç—Ä–æ–π–∫–∏</p>
              <p className="text-sm text-gray-600">–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</p>
            </div>
          </button>

          {isAdmin && (
            <button
              onClick={() => setShowAdminPanel(true)}
              className="flex items-center gap-3 p-4 bg-purple-50 hover:bg-purple-100 rounded-lg transition-colors"
            >
              <Icon name="Shield" className="w-5 h-5 text-purple-600" />
              <div className="text-left">
                <p className="font-medium text-gray-900">–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</p>
                <p className="text-sm text-gray-600">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏</p>
              </div>
            </button>
          )}
        </div>
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ñ–∏–ª–µ */}
      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div className="bg-white rounded-xl shadow-lg p-6">
          <h2 className="text-xl font-semibold text-gray-900 mb-4 flex items-center gap-2">
            <Icon name="User" className="w-5 h-5" />
            –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ñ–∏–ª–µ
          </h2>
          <div className="space-y-3">
            <div className="flex justify-between">
              <span className="text-gray-600">–ò–º—è:</span>
              <span className="font-medium">{user.name}</span>
            </div>
            <div className="flex justify-between">
              <span className="text-gray-600">Email:</span>
              <span className="font-medium">{user.email}</span>
            </div>
            <div className="flex justify-between">
              <span className="text-gray-600">–¢–µ–ª–µ—Ñ–æ–Ω:</span>
              <span className="font-medium">{user.phone || '–ù–µ —É–∫–∞–∑–∞–Ω'}</span>
            </div>
            <div className="flex justify-between">
              <span className="text-gray-600">–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è:</span>
              <span className="font-medium">{user.birthDate || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}</span>
            </div>
            <div className="flex justify-between">
              <span className="text-gray-600">–°—Ç–∞—Ç—É—Å:</span>
              <span className={`font-medium ${user.status === 'active' ? 'text-green-600' : 'text-gray-500'}`}>
                {user.status === 'active' ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}
              </span>
            </div>
            {user.isVerified && (
              <div className="flex items-center justify-center pt-2">
                <span className="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800">
                  <Icon name="CheckCircle" className="w-3 h-3 mr-1" />
                  –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç
                </span>
              </div>
            )}
          </div>
        </div>

        <div className="bg-white rounded-xl shadow-lg p-6">
          <h2 className="text-xl font-semibold text-gray-900 mb-4 flex items-center gap-2">
            <Icon name="Activity" className="w-5 h-5" />
            –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
          </h2>
          <div className="space-y-3">
            <div className="flex justify-between">
              <span className="text-gray-600">–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</span>
              <span className="font-medium">
                {user.createdAt ? new Date(user.createdAt).toLocaleDateString('ru-RU') : '–ù–µ–¥–∞–≤–Ω–æ'}
              </span>
            </div>
            <div className="flex justify-between">
              <span className="text-gray-600">–ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:</span>
              <span className="font-medium">
                {user.lastLoginAt ? new Date(user.lastLoginAt).toLocaleDateString('ru-RU') : '–°–µ–π—á–∞—Å'}
              </span>
            </div>
            <div className="flex justify-between">
              <span className="text-gray-600">–†–æ–ª—å:</span>
              <span className="font-medium capitalize">
                {user.role === 'admin' ? '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' : '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}
              </span>
            </div>
          </div>
        </div>
      </div>

      {/* –ú–æ–¥–∞–ª–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è */}
      {showProfileEdit && (
        <ProfileEditModal
          user={user}
          onClose={() => setShowProfileEdit(false)}
          onUpdate={handleProfileUpdate}
        />
      )}

      {/* –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å */}
      {showAdminPanel && isAdmin && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
          <div className="bg-white rounded-xl shadow-2xl max-w-6xl w-full mx-4 max-h-[90vh] overflow-hidden">
            <div className="flex items-center justify-between p-6 border-b border-gray-200">
              <h2 className="text-2xl font-bold text-gray-900 flex items-center gap-2">
                <Icon name="Shield" className="w-6 h-6 text-purple-600" />
                –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
              </h2>
              <button
                onClick={() => setShowAdminPanel(false)}
                className="p-2 hover:bg-gray-100 rounded-lg transition-colors"
              >
                <Icon name="X" className="w-5 h-5" />
              </button>
            </div>
            <div className="overflow-y-auto max-h-[calc(90vh-80px)]">
              <UserManagement />
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default UserDashboard_New;