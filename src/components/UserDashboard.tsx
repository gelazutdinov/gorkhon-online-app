import { useState } from 'react';
import Icon from '@/components/ui/icon';
import { UserProfile } from '@/hooks/useUser';


interface UserDashboardProps {
  user: UserProfile;
  daysWithUs: number;
  formattedTimeSpent: string;
  onLogout: () => void;
  onUserUpdate?: (user: UserProfile) => void;
}

const UserDashboard = ({ user, daysWithUs, formattedTimeSpent, onLogout, onUserUpdate }: UserDashboardProps) => {
  const [showAvatarEditor, setShowAvatarEditor] = useState(false);
  const [activeTab, setActiveTab] = useState<'stats'>('stats');
  const [showInterestsEditor, setShowInterestsEditor] = useState(false);
  const getRegistrationDate = () => {
    return new Date(user.registeredAt).toLocaleDateString('ru-RU', {
      day: 'numeric',
      month: 'long',
      year: 'numeric'
    });
  };

  const getMostUsedFeature = () => {
    const features = user.stats?.featuresUsed || {};
    const entries = Object.entries(features);
    if (entries.length === 0) return '–ü–æ–∫–∞ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö';
    
    const [featureName] = entries.reduce((a, b) => a[1] > b[1] ? a : b);
    
    const featureNames: Record<string, string> = {
      importantNumbers: '–í–∞–∂–Ω—ã–µ –Ω–æ–º–µ—Ä–∞',
      schedule: '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞',
      donation: '–ü–æ–º–æ—â—å –ø–æ—Å–µ–ª–∫—É',
      workSchedule: '–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã',
      pvz: '–ü—É–Ω–∫—Ç—ã –≤—ã–¥–∞—á–∏',
      notifications: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è'
    };
    
    return featureNames[featureName] || featureName;
  };

  const getMostVisitedSection = () => {
    const sections = user.stats?.sectionsVisited || {};
    const entries = Object.entries(sections);
    if (entries.length === 0) return '–ü–æ–∫–∞ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö';
    
    const [sectionName] = entries.reduce((a, b) => a[1] > b[1] ? a : b);
    
    const sectionNames: Record<string, string> = {
      home: '–ì–ª–∞–≤–Ω–∞—è',
      news: '–ù–æ–≤–æ—Å—Ç–∏',
      support: '–ü–æ–¥–¥–µ—Ä–∂–∫–∞',
      profile: '–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç'
    };
    
    return sectionNames[sectionName] || sectionName;
  };

  const getActivityLevel = () => {
    const totalActions = Object.values(user.stats?.featuresUsed || {}).reduce((sum, count) => sum + count, 0);
    if (totalActions < 10) return { level: '–ù–æ–≤–∏—á–æ–∫', color: 'text-gray-600', bg: 'bg-gray-100' };
    if (totalActions < 50) return { level: '–ê–∫—Ç–∏–≤–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', color: 'text-blue-600', bg: 'bg-blue-100' };
    if (totalActions < 100) return { level: '–û–ø—ã—Ç–Ω—ã–π –∂–∏—Ç–µ–ª—å', color: 'text-green-600', bg: 'bg-green-100' };
    return { level: '–ú–∞—Å—Ç–µ—Ä –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã', color: 'text-purple-600', bg: 'bg-purple-100' };
  };

  const getAvatarEmoji = (avatar: string): string => {
    const avatarMap: Record<string, string> = {
      default_male: 'üë®',
      default_female: 'üë©',
      businessman: 'üë®‚Äçüíº',
      businesswoman: 'üë©‚Äçüíº',
      worker: 'üë®‚Äçüîß',
      worker_woman: 'üë©‚Äçüîß',
      farmer: 'üë®‚Äçüåæ',
      farmer_woman: 'üë©‚Äçüåæ',
      teacher: 'üë®‚Äçüè´',
      teacher_woman: 'üë©‚Äçüè´',
      doctor: 'üë®‚Äç‚öïÔ∏è',
      doctor_woman: 'üë©‚Äç‚öïÔ∏è',
      artist: 'üë®‚Äçüé®',
      artist_woman: 'üë©‚Äçüé®',
      chef: 'üë®‚Äçüç≥',
      chef_woman: 'üë©‚Äçüç≥',
      oldman: 'üë¥',
      oldwoman: 'üëµ',
      boy: 'üë¶',
      girl: 'üëß'
    };
    return avatarMap[avatar] || 'üë§';
  };

  const handleSaveInterests = (interests: string[]) => {
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –Ω–æ–≤—ã–º–∏ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º–∏
    const updatedUser = { ...user, interests };
    localStorage.setItem('gorkhon_user_profile', JSON.stringify(updatedUser));
    setShowInterestsEditor(false);
    if (onUserUpdate) {
      onUserUpdate(updatedUser);
    }
  };

  const activityLevel = getActivityLevel();

  return (
    <div className="space-y-6">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–æ—Ñ–∏–ª—è */}
      <div className="text-center">
        <div className="w-20 h-20 mx-auto mb-4">
          <div className="bg-gradient-to-r from-gorkhon-pink to-gorkhon-green rounded-full w-full h-full flex items-center justify-center text-3xl">
            {getAvatarEmoji(user.avatar)}
          </div>
        </div>
        <h2 className="text-2xl font-bold text-gray-800 mb-1">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.name}!</h2>
        <p className="text-gray-600">–í–∞—à –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –∂–∏—Ç–µ–ª—è –ì–æ—Ä—Ö–æ–Ω–∞</p>
        
        {/* –ü–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ —Å –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è */}
        {user.birthDate && (
          <div className="mt-4 text-sm text-gray-600">
            –î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è: {new Date(user.birthDate).toLocaleDateString('ru-RU')}
          </div>
        )}
        
        {/* –£—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ */}
        <div className={`inline-flex items-center gap-2 px-3 py-1 rounded-full mt-2 ${activityLevel.bg}`}>
          <Icon name="Award" size={14} className={activityLevel.color} />
          <span className={`text-sm font-medium ${activityLevel.color}`}>
            {activityLevel.level}
          </span>
        </div>
      </div>



      {/* –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
          <div className="grid grid-cols-2 gap-4">
        <div className="bg-white rounded-xl p-4 shadow-lg border border-gray-100 text-center">
          <Icon name="Calendar" size={24} className="text-gorkhon-pink mx-auto mb-2" />
          <div className="text-2xl font-bold text-gray-800">{daysWithUs}</div>
          <div className="text-sm text-gray-600">–¥–Ω–µ–π —Å –Ω–∞–º–∏</div>
        </div>
        
        <div className="bg-white rounded-xl p-4 shadow-lg border border-gray-100 text-center">
          <Icon name="Clock" size={24} className="text-gorkhon-green mx-auto mb-2" />
          <div className="text-2xl font-bold text-gray-800">{formattedTimeSpent}</div>
          <div className="text-sm text-gray-600">–≤—Ä–µ–º–µ–Ω–∏ –≤ —Å–µ—Ä–≤–∏—Å–µ</div>
        </div>
        
        <div className="bg-white rounded-xl p-4 shadow-lg border border-gray-100 text-center">
          <Icon name="BarChart3" size={24} className="text-blue-500 mx-auto mb-2" />
          <div className="text-2xl font-bold text-gray-800">{user.stats?.totalSessions || 0}</div>
          <div className="text-sm text-gray-600">—Å–µ—Å—Å–∏–π</div>
        </div>
        
        <div className="bg-white rounded-xl p-4 shadow-lg border border-gray-100 text-center">
          <Icon name="Target" size={24} className="text-orange-500 mx-auto mb-2" />
          <div className="text-2xl font-bold text-gray-800">{user.stats?.daysActive || 0}</div>
          <div className="text-sm text-gray-600">–∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–Ω–µ–π</div>
        </div>
      </div>

      {/* –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div className="bg-white rounded-2xl p-6 shadow-lg border border-gray-100">
        <h3 className="text-lg font-semibold text-gray-800 mb-4 flex items-center gap-2">
          <Icon name="TrendingUp" size={20} className="text-gorkhon-pink" />
          –í–∞—à–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
        </h3>
        
        <div className="space-y-4">
          <div className="flex items-center justify-between">
            <span className="text-gray-600">–õ—é–±–∏–º—ã–π —Ä–∞–∑–¥–µ–ª:</span>
            <span className="font-medium text-gray-800">{getMostVisitedSection()}</span>
          </div>
          
          <div className="flex items-center justify-between">
            <span className="text-gray-600">–ß–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ:</span>
            <span className="font-medium text-gray-800">{getMostUsedFeature()}</span>
          </div>
          
          <div className="flex items-center justify-between">
            <span className="text-gray-600">–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</span>
            <span className="font-medium text-gray-800">{getRegistrationDate()}</span>
          </div>
        </div>
      </div>

      {/* –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π */}
      <div className="bg-white rounded-2xl p-6 shadow-lg border border-gray-100">
        <h3 className="text-lg font-semibold text-gray-800 mb-4 flex items-center gap-2">
          <Icon name="Activity" size={20} className="text-gorkhon-green" />
          –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π
        </h3>
        
        <div className="space-y-3">
          {Object.entries(user.stats?.featuresUsed || {}).map(([feature, count]) => {
            const featureNames: Record<string, string> = {
              importantNumbers: '–í–∞–∂–Ω—ã–µ –Ω–æ–º–µ—Ä–∞',
              schedule: '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞',
              donation: '–ü–æ–º–æ—â—å –ø–æ—Å–µ–ª–∫—É',
              workSchedule: '–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã',
              pvz: '–ü—É–Ω–∫—Ç—ã –≤—ã–¥–∞—á–∏',
              notifications: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è'
            };
            
            const allCounts = Object.values(user.stats?.featuresUsed || {});
            const maxCount = allCounts.length > 0 ? Math.max(...allCounts) : 0;
            const percentage = maxCount > 0 ? (count / maxCount) * 100 : 0;
            
            return (
              <div key={feature}>
                <div className="flex justify-between text-sm mb-1">
                  <span className="text-gray-600">{featureNames[feature]}</span>
                  <span className="font-medium">{count}</span>
                </div>
                <div className="w-full bg-gray-200 rounded-full h-2">
                  <div 
                    className="bg-gradient-to-r from-gorkhon-pink to-gorkhon-green h-2 rounded-full transition-all duration-300"
                    style={{ width: `${percentage}%` }}
                  />
                </div>
              </div>
            );
          })}
        </div>
      </div>

      {/* –ü–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è AI - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ */}

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–æ—Ñ–∏–ª—è */}
      <div className="bg-white rounded-2xl p-6 shadow-lg border border-gray-100">
        <h3 className="text-lg font-semibold text-gray-800 mb-4 flex items-center gap-2">
          <Icon name="Settings" size={20} className="text-gray-600" />
          –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–æ—Ñ–∏–ª—è
        </h3>
        
        <div className="space-y-3">
          <div className="flex items-center gap-3">
            <Icon name="Mail" size={16} className="text-gray-400" />
            <span className="text-gray-600">{user.email}</span>
          </div>
          <div className="flex items-center gap-3">
            <Icon name="Phone" size={16} className="text-gray-400" />
            <span className="text-gray-600">{user.phone}</span>
          </div>
          
          {/* –ò–Ω—Ç–µ—Ä–µ—Å—ã */}
          <div className="space-y-2">
            <div className="flex items-center justify-between">
              <div className="flex items-center gap-3">
                <Icon name="Heart" size={16} className="text-gray-400" />
                <span className="text-gray-600">–ò–Ω—Ç–µ—Ä–µ—Å—ã:</span>
              </div>
              <button
                onClick={() => setShowInterestsEditor(true)}
                className="text-gorkhon-pink hover:text-gorkhon-pink/80 text-sm"
              >
                {user.interests && user.interests.length > 0 ? '–ò–∑–º–µ–Ω–∏—Ç—å' : '–î–æ–±–∞–≤–∏—Ç—å'}
              </button>
            </div>
            
            {user.interests && user.interests.length > 0 ? (
              <div className="flex flex-wrap gap-1 ml-6">
                {user.interests.slice(0, 5).map((interest, idx) => (
                  <span 
                    key={idx}
                    className="text-xs px-2 py-1 bg-gray-100 text-gray-600 rounded-full"
                  >
                    {interest}
                  </span>
                ))}
                {user.interests.length > 5 && (
                  <span className="text-xs text-gray-400">
                    +{user.interests.length - 5}
                  </span>
                )}
              </div>
            ) : (
              <p className="text-sm text-gray-400 ml-6">–ù–µ —É–∫–∞–∑–∞–Ω—ã</p>
            )}
          </div>
        </div>
        
        {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ */}
        {showInterestsEditor && (
          <div className="fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4">
            <div className="bg-white rounded-2xl max-w-lg w-full max-h-[90vh] overflow-y-auto p-6">
              <div className="text-center py-8">
                <h3 className="text-lg font-semibold text-gray-800 mb-2">–†–µ–¥–∞–∫—Ç–æ—Ä –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤</h3>
                <p className="text-gray-600 mb-4">–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</p>
                <button
                  onClick={() => setShowInterestsEditor(false)}
                  className="px-4 py-2 bg-gorkhon-pink text-white rounded-lg"
                >
                  –ó–∞–∫—Ä—ã—Ç—å
                </button>
              </div>
            </div>
          </div>
        )}
      </div>

      {/* –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞ */}
      <button
        onClick={onLogout}
        className="w-full flex items-center justify-center gap-2 px-4 py-3 bg-gray-100 text-gray-700 rounded-xl hover:bg-gray-200 transition-colors"
      >
        <Icon name="LogOut" size={18} />
        <span>–í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞</span>
      </button>

    </div>
  );
};

export default UserDashboard;