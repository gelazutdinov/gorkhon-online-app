import { useState } from 'react';
import { Link } from 'react-router-dom';
import Icon from '@/components/ui/icon';

interface RegistrationFormProps {
  onRegister: (userData: { name: string; email: string; phone: string; gender: 'male' | 'female'; birthDate: string }) => void;
  onLogin?: (loginData: { email: string; password: string }) => void;
}

const RegistrationForm = ({ onRegister, onLogin }: RegistrationFormProps) => {
  const [isLoginMode, setIsLoginMode] = useState(false);
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    phone: '',
    password: '',
    gender: 'male' as 'male' | 'female',
    birthDate: ''
  });
  const [errors, setErrors] = useState<Record<string, string>>({});
  const [acceptedTerms, setAcceptedTerms] = useState(false);
  const [acceptedPrivacy, setAcceptedPrivacy] = useState(false);

  const validateForm = () => {
    const newErrors: Record<string, string> = {};

    if (!formData.email.trim()) {
      newErrors.email = '–í–≤–µ–¥–∏—Ç–µ email';
    } else if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(formData.email)) {
      newErrors.email = '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email';
    }

    if (!formData.password.trim()) {
      newErrors.password = '–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å';
    } else if (formData.password.length < 6) {
      newErrors.password = '–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤';
    }

    if (!isLoginMode) {
      if (!formData.name.trim()) {
        newErrors.name = '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è';
      }

      if (!formData.phone.trim()) {
        newErrors.phone = '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞';
      } else if (!/^[\+]?[0-9\-\(\)\s]+$/.test(formData.phone)) {
        newErrors.phone = '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞';
      }

      if (!formData.birthDate) {
        newErrors.birthDate = '–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è';
      } else {
        const birthYear = new Date(formData.birthDate).getFullYear();
        const currentYear = new Date().getFullYear();
        if (currentYear - birthYear < 14) {
          newErrors.birthDate = '–í–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 14 –ª–µ—Ç';
        }
      }

      if (!acceptedTerms) {
        newErrors.terms = '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–≥–ª–∞—Å–∏—Ç—å—Å—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ–º';
      }

      if (!acceptedPrivacy) {
        newErrors.privacy = '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–≥–ª–∞—Å–∏—Ç—å—Å—è —Å –ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏';
      }
    }

    setErrors(newErrors);
    return Object.keys(newErrors).length === 0;
  };

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    if (validateForm()) {
      if (isLoginMode) {
        onLogin?.({ email: formData.email, password: formData.password });
      } else {
        onRegister(formData);
      }
    }
  };

  const handleChange = (field: string, value: string) => {
    setFormData(prev => ({ ...prev, [field]: value }));
    if (errors[field]) {
      setErrors(prev => ({ ...prev, [field]: '' }));
    }
  };

  return (
    <div className="max-w-md mx-auto">
      <div className="text-center mb-8">
        <div className="bg-gorkhon-pink/10 rounded-full w-20 h-20 flex items-center justify-center mx-auto mb-4">
          <Icon name="UserPlus" size={32} className="text-gorkhon-pink" />
        </div>
        <h2 className="text-2xl font-bold text-gray-800 mb-2">
          {isLoginMode ? '–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É' : '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è'}
        </h2>
        <p className="text-gray-600">
          {isLoginMode 
            ? '–í–æ–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç' 
            : '–°–æ–∑–¥–∞–π—Ç–µ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏'
          }
        </p>
      </div>

      {/* –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ä–µ–∂–∏–º–∞ */}
      <div className="flex bg-gray-100 rounded-xl p-1 mb-6">
        <button
          type="button"
          onClick={() => {
            setIsLoginMode(false);
            setErrors({});
            setFormData({
              name: '',
              email: '',
              phone: '',
              password: '',
              gender: 'male' as 'male' | 'female',
              birthDate: ''
            });
          }}
          className={`flex-1 py-2 px-4 rounded-lg text-sm font-medium transition-all ${
            !isLoginMode
              ? 'bg-white text-gray-900 shadow-sm'
              : 'text-gray-600 hover:text-gray-900'
          }`}
        >
          –°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç
        </button>
        <button
          type="button"
          onClick={() => {
            setIsLoginMode(true);
            setErrors({});
            setAcceptedTerms(false);
            setAcceptedPrivacy(false);
          }}
          className={`flex-1 py-2 px-4 rounded-lg text-sm font-medium transition-all ${
            isLoginMode
              ? 'bg-white text-gray-900 shadow-sm'
              : 'text-gray-600 hover:text-gray-900'
          }`}
        >
          –í–æ–π—Ç–∏
        </button>
      </div>

      <form onSubmit={handleSubmit} className="space-y-6">
        {!isLoginMode && (
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è
            </label>
            <div className="relative">
              <Icon name="User" size={18} className="absolute left-3 top-3 text-gray-400" />
              <input
                type="text"
                value={formData.name}
                onChange={(e) => handleChange('name', e.target.value)}
                className={`w-full pl-10 pr-4 py-3 border rounded-xl focus:ring-2 focus:ring-gorkhon-pink focus:border-transparent transition-all ${
                  errors.name ? 'border-red-500' : 'border-gray-300'
                }`}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è"
              />
            </div>
            {errors.name && (
              <p className="mt-1 text-sm text-red-600">{errors.name}</p>
            )}
          </div>
        )}

        <div>
          <label className="block text-sm font-medium text-gray-700 mb-2">
            Email
          </label>
          <div className="relative">
            <Icon name="Mail" size={18} className="absolute left-3 top-3 text-gray-400" />
            <input
              type="email"
              value={formData.email}
              onChange={(e) => handleChange('email', e.target.value)}
              className={`w-full pl-10 pr-4 py-3 border rounded-xl focus:ring-2 focus:ring-gorkhon-pink focus:border-transparent transition-all ${
                errors.email ? 'border-red-500' : 'border-gray-300'
              }`}
              placeholder="example@mail.ru"
            />
          </div>
          {errors.email && (
            <p className="mt-1 text-sm text-red-600">{errors.email}</p>
          )}
        </div>

        <div>
          <label className="block text-sm font-medium text-gray-700 mb-2">
            –ü–∞—Ä–æ–ª—å
          </label>
          <div className="relative">
            <Icon name="Lock" size={18} className="absolute left-3 top-3 text-gray-400" />
            <input
              type="password"
              value={formData.password}
              onChange={(e) => handleChange('password', e.target.value)}
              className={`w-full pl-10 pr-4 py-3 border rounded-xl focus:ring-2 focus:ring-gorkhon-pink focus:border-transparent transition-all ${
                errors.password ? 'border-red-500' : 'border-gray-300'
              }`}
              placeholder={isLoginMode ? "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å" : "–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –ø–∞—Ä–æ–ª—å (–º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤)"}
            />
          </div>
          {errors.password && (
            <p className="mt-1 text-sm text-red-600">{errors.password}</p>
          )}
        </div>

        {!isLoginMode && (
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
            </label>
          <div className="relative">
            <Icon name="Phone" size={18} className="absolute left-3 top-3 text-gray-400" />
            <input
              type="tel"
              value={formData.phone}
              onChange={(e) => handleChange('phone', e.target.value)}
              className={`w-full pl-10 pr-4 py-3 border rounded-xl focus:ring-2 focus:ring-gorkhon-pink focus:border-transparent transition-all ${
                errors.phone ? 'border-red-500' : 'border-gray-300'
              }`}
              placeholder="+7 (XXX) XXX-XX-XX"
            />
          </div>
          {errors.phone && (
            <p className="mt-1 text-sm text-red-600">{errors.phone}</p>
          )}
        </div>

        {/* –ü–æ–ª */}
        {!isLoginMode && (
        <div>
          <label className="block text-sm font-medium text-gray-700 mb-3">
            –ü–æ–ª
          </label>
          <div className="grid grid-cols-2 gap-3">
            <button
              type="button"
              onClick={() => handleChange('gender', 'male')}
              className={`p-4 rounded-xl border-2 transition-all ${
                formData.gender === 'male'
                  ? 'border-gorkhon-blue bg-gorkhon-blue/10 text-gorkhon-blue'
                  : 'border-gray-200 hover:border-gray-300'
              }`}
            >
              <div className="flex items-center justify-center gap-3">
                <span className="text-2xl">üë®</span>
                <span className="font-medium">–ú—É–∂—Å–∫–æ–π</span>
              </div>
            </button>
            <button
              type="button"
              onClick={() => handleChange('gender', 'female')}
              className={`p-4 rounded-xl border-2 transition-all ${
                formData.gender === 'female'
                  ? 'border-gorkhon-pink bg-gorkhon-pink/10 text-gorkhon-pink'
                  : 'border-gray-200 hover:border-gray-300'
              }`}
            >
              <div className="flex items-center justify-center gap-3">
                <span className="text-2xl">üë©</span>
                <span className="font-medium">–ñ–µ–Ω—Å–∫–∏–π</span>
              </div>
            </button>
          </div>
        </div>
        )}

        {/* –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è */}
        {!isLoginMode && (
        <div>
          <label className="block text-sm font-medium text-gray-700 mb-2">
            –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è
          </label>
          <div className="relative">
            <Icon name="Calendar" size={18} className="absolute left-3 top-3 text-gray-400" />
            <input
              type="date"
              value={formData.birthDate}
              onChange={(e) => handleChange('birthDate', e.target.value)}
              max={new Date(new Date().setFullYear(new Date().getFullYear() - 14)).toISOString().split('T')[0]}
              className={`w-full pl-10 pr-4 py-3 border rounded-xl focus:ring-2 focus:ring-gorkhon-pink focus:border-transparent transition-all ${
                errors.birthDate ? 'border-red-500' : 'border-gray-300'
              }`}
            />
          </div>
          {errors.birthDate && (
            <p className="mt-1 text-sm text-red-600">{errors.birthDate}</p>
          )}
        </div>
        )}

        {/* –°–æ–≥–ª–∞—Å–∏–µ —Å –ø—Ä–∞–≤–æ–≤—ã–º–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏ */}
        {!isLoginMode && (
        <div className="space-y-4 p-4 bg-gray-50 rounded-xl border border-gray-200">
          <div className="text-sm font-medium text-gray-700 mb-3 flex items-center gap-2">
            <Icon name="FileText" size={16} className="text-gorkhon-blue" />
            <span>–°–æ–≥–ª–∞—Å–∏–µ —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏</span>
          </div>
          
          <div className="space-y-3">
            <label className="flex items-start gap-3 cursor-pointer">
              <input
                type="checkbox"
                checked={acceptedTerms}
                onChange={(e) => {
                  setAcceptedTerms(e.target.checked);
                  if (errors.terms) {
                    setErrors(prev => ({ ...prev, terms: '' }));
                  }
                }}
                className="w-4 h-4 text-gorkhon-pink rounded border-gray-300 focus:ring-gorkhon-pink mt-0.5"
              />
              <div className="text-sm text-gray-700">
                –Ø –ø—Ä–∏–Ω–∏–º–∞—é{' '}
                <Link 
                  to="/terms" 
                  target="_blank"
                  className="text-gorkhon-pink hover:underline font-medium"
                >
                  –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ
                </Link>
                {' '}–∏ —Å–æ–≥–ª–∞—à–∞—é—Å—å —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–æ—Ä—Ç–∞–ª–∞
              </div>
            </label>
            {errors.terms && (
              <p className="text-sm text-red-600 ml-7">{errors.terms}</p>
            )}

            <label className="flex items-start gap-3 cursor-pointer">
              <input
                type="checkbox"
                checked={acceptedPrivacy}
                onChange={(e) => {
                  setAcceptedPrivacy(e.target.checked);
                  if (errors.privacy) {
                    setErrors(prev => ({ ...prev, privacy: '' }));
                  }
                }}
                className="w-4 h-4 text-gorkhon-pink rounded border-gray-300 focus:ring-gorkhon-pink mt-0.5"
              />
              <div className="text-sm text-gray-700">
                –Ø —Å–æ–≥–ª–∞—Å–µ–Ω —Å{' '}
                <Link 
                  to="/privacy" 
                  target="_blank"
                  className="text-gorkhon-pink hover:underline font-medium"
                >
                  –ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
                </Link>
                {' '}–∏ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
              </div>
            </label>
            {errors.privacy && (
              <p className="text-sm text-red-600 ml-7">{errors.privacy}</p>
            )}
          </div>
          
          <div className="mt-3 p-3 bg-blue-50 rounded-lg border border-blue-200">
            <div className="flex items-start gap-2">
              <Icon name="Shield" size={14} className="text-blue-600 mt-0.5" />
              <div className="text-xs text-blue-700">
                <p className="font-medium mb-1">–í–∞—à–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –≤–∞–∂–Ω–∞</p>
                <p>
                  –í—Å–µ –¥–∞–Ω–Ω—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ. 
                  –û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –Ω–∞—à–µ–π{' '}
                  <Link 
                    to="/data-protection" 
                    target="_blank"
                    className="underline hover:no-underline"
                  >
                    —Å–∏—Å—Ç–µ–º–æ–π –∑–∞—â–∏—Ç—ã –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
                  </Link>
                </p>
              </div>
            </div>
          </div>
        </div>
        )}

        <button
          type="submit"
          disabled={!isLoginMode && (!acceptedTerms || !acceptedPrivacy)}
          className={`w-full font-semibold py-3 px-6 rounded-xl transition-all duration-200 ${
            (isLoginMode || (acceptedTerms && acceptedPrivacy))
              ? 'bg-gradient-to-r from-gorkhon-pink to-gorkhon-green text-white hover:shadow-lg transform hover:scale-105'
              : 'bg-gray-300 text-gray-500 cursor-not-allowed'
          }`}
        >
          <div className="flex items-center justify-center gap-2">
            <Icon name="Check" size={18} />
            <span>{isLoginMode ? '–í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É' : '–°–æ–∑–¥–∞—Ç—å –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç'}</span>
          </div>
        </button>
      </form>

      <div className="mt-8 p-4 bg-blue-50 rounded-xl border border-blue-200">
        <div className="flex items-start gap-3">
          <Icon name="Info" size={16} className="text-blue-600 mt-0.5" />
          <div className="text-sm text-blue-700">
            <p className="font-medium mb-1">–ó–∞—á–µ–º –Ω—É–∂–Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è?</p>
            <ul className="space-y-1 text-xs">
              <li>‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π</li>
              <li>‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</li>
              <li>‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤–∞–∂–Ω—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö</li>
              <li>‚Ä¢ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤–∞—à–∏—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π</li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  );
};

export default RegistrationForm;