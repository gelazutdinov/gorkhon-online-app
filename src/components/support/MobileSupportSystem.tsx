import { useState, useRef, useEffect } from 'react';
import { UserProfile } from '@/hooks/useUser';
import Icon from '@/components/ui/icon';
import TicketSystem from '../TicketSystem';

interface MobileSupportSystemProps {
  user: UserProfile;
  onSectionChange?: (section: string) => void;
}

interface Message {
  id: string;
  text: string;
  isUser: boolean;
  timestamp: Date;
}

const MobileSupportSystem = ({ user, onSectionChange }: MobileSupportSystemProps) => {
  const [showFullSupport, setShowFullSupport] = useState(false);
  const [showLinaChat, setShowLinaChat] = useState(true);
  const [messages, setMessages] = useState<Message[]>([
    {
      id: '1',
      text: '–ü—Ä–∏–≤–µ—Ç! –Ø –õ–∏–Ω–∞, –≤–∞—à –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π AI-–ø–æ–º–æ—â–Ω–∏–∫ –ì–æ—Ä—Ö–æ–Ω.Online! üöÄ –ì–æ—Ç–æ–≤–∞ –ø–æ–º–æ—á—å —Å –ª—é–±—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏ –æ –∂–∏–∑–Ω–∏ –≤ –Ω–∞—à–µ–º –ø–æ—Å–µ–ª–∫–µ. –ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç? üòä',
      isUser: false,
      timestamp: new Date()
    }
  ]);
  const [inputMessage, setInputMessage] = useState('');
  const messagesEndRef = useRef<HTMLDivElement>(null);

  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });
  };

  useEffect(() => {
    scrollToBottom();
  }, [messages]);

  const getLinaResponse = (userMessage: string): string => {
    const message = userMessage.toLowerCase();
    
    if (message.includes('–ø—Ä–∏–≤–µ—Ç') || message.includes('–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π')) {
      return '–ü—Ä–∏–≤–µ—Ç! –†–∞–¥–∞ –≤–∞—Å –≤–∏–¥–µ—Ç—å! –ö–∞–∫ –¥–µ–ª–∞ –≤ –ì–æ—Ä—Ö–æ–Ω–µ? üòä';
    }
    
    if (message.includes('–ø–æ–º–æ—â—å') || message.includes('–ø—Ä–æ–±–ª–µ–º–∞')) {
      return '–ö–æ–Ω–µ—á–Ω–æ, –ø–æ–º–æ–≥—É! –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ –≤–∞—à–µ–π –ø—Ä–æ–±–ª–µ–º–µ, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –Ω–∞–π—Ç–∏ —Ä–µ—à–µ–Ω–∏–µ üîß';
    }
    
    if (message.includes('—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç') || message.includes('–∞–≤—Ç–æ–±—É—Å') || message.includes('—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ')) {
      return '–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞: –∞–≤—Ç–æ–±—É—Å—ã —Ö–æ–¥—è—Ç –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é –≤ —Ä–∞–∑–¥–µ–ª–µ "–ì–ª–∞–≤–Ω–∞—è". –ï—Å–ª–∏ –µ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è - —Å–æ–æ–±—â–∏–º —á–µ—Ä–µ–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è! üöå';
    }
    
    if (message.includes('–ø–ª–∞—Ç–µ–∂') || message.includes('–æ–ø–ª–∞—Ç–∞') || message.includes('–ø–æ–º–æ—â—å –ø–æ—Å–µ–ª–∫—É')) {
      return '–î–ª—è –ø–æ–º–æ—â–∏ –ø–æ—Å–µ–ª–∫—É –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "–ì–ª–∞–≤–Ω–∞—è" ‚Üí "–ü–æ–º–æ—â—å –ø–æ—Å–µ–ª–∫—É". –¢–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã —Ä–∞–∑–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏ üíù';
    }
    
    if (message.includes('–Ω–æ–≤–æ—Å—Ç–∏') || message.includes('—á—Ç–æ –Ω–æ–≤–æ–≥–æ')) {
      return '–í—Å–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ—Å–µ–ª–∫–∞ –≤ —Ä–∞–∑–¥–µ–ª–µ "–ù–æ–≤–æ—Å—Ç–∏". –¢–∞–º –ø—É–±–ª–∏–∫—É—é—Ç—Å—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –≤–∞–∂–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è! üì∞';
    }
    
    if (message.includes('–ø–≤–∑') || message.includes('–ø—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏') || message.includes('–ø–æ—Å—ã–ª–∫–∞')) {
      return '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—É–Ω–∫—Ç–∞—Ö –≤—ã–¥–∞—á–∏ –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Ä–∞–∑–¥–µ–ª–µ "–ì–ª–∞–≤–Ω–∞—è" ‚Üí "–ü—É–Ω–∫—Ç—ã –≤—ã–¥–∞—á–∏ –∑–∞–∫–∞–∑–æ–≤". –¢–∞–º –∞–¥—Ä–µ—Å–∞ –∏ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã üì¶';
    }
    
    if (message.includes('—Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞') || message.includes('—Ç–∏–∫–µ—Ç') || message.includes('–∂–∞–ª–æ–±–∞')) {
      return '–î–ª—è —Å–µ—Ä—å–µ–∑–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ —Å–æ–∑–¥–∞–π—Ç–µ —Ç–∏–∫–µ—Ç —á–µ—Ä–µ–∑ "–°–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç". –Ø –ø–µ—Ä–µ–≤–µ–¥—É –≤–∞—Å –Ω–∞ –∂–∏–≤–æ–≥–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ üé´';
    }
    
    if (message.includes('—Å–ø–∞—Å–∏–±–æ') || message.includes('–±–ª–∞–≥–æ–¥–∞—Ä—é')) {
      return '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞! –í—Å–µ–≥–¥–∞ —Ä–∞–¥–∞ –ø–æ–º–æ—á—å –∂–∏—Ç–µ–ª—è–º –ì–æ—Ä—Ö–æ–Ω–∞! –û–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è üíô';
    }
    
    return '–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –≤–æ–ø—Ä–æ—Å! –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∞ —Ç–æ—á–Ω—ã–π –æ—Ç–≤–µ—Ç, –º–æ–≥—É —Å–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç –¥–ª—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å ü§î';
  };

  const handleSendMessage = (e: React.FormEvent) => {
    e.preventDefault();
    if (!inputMessage.trim()) return;

    const userMessage: Message = {
      id: Date.now().toString(),
      text: inputMessage,
      isUser: true,
      timestamp: new Date()
    };

    setMessages(prev => [...prev, userMessage]);
    setInputMessage('');

    // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ –æ—Ç–≤–µ—Ç–∞ –õ–∏–Ω—ã
    setTimeout(() => {
      const linaResponse: Message = {
        id: (Date.now() + 1).toString(),
        text: getLinaResponse(inputMessage),
        isUser: false,
        timestamp: new Date()
      };
      setMessages(prev => [...prev, linaResponse]);
    }, 1000);
  };

  // –£–±–∏—Ä–∞–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –∑–∞–ø—Ä–æ—Å—É

  return (
    <div className="relative">
      {/* –û—Å–Ω–æ–≤–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ */}
      {showFullSupport ? (
        <div className="space-y-6">
          <div className="flex items-center justify-between">
            <h2 className="text-xl font-bold text-gray-800">–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞</h2>
            <button
              onClick={() => setShowFullSupport(false)}
              className="p-2 hover:bg-gray-100 rounded-lg"
            >
              <Icon name="X" size={20} className="text-gray-500" />
            </button>
          </div>
          <TicketSystem user={user} />
        </div>
      ) : (
        <>
          {/* –ú–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å –±—ã—Å—Ç—Ä—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏ */}
          <div className="space-y-6">
            <div className="text-center">
              <div className="w-16 h-16 bg-gradient-to-r from-purple-500 to-blue-500 rounded-full flex items-center justify-center mx-auto mb-4">
                <span className="text-2xl">ü§ñ</span>
              </div>
              <h2 className="text-xl font-bold text-gray-800 mb-2">–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ì–æ—Ä—Ö–æ–Ω–∞</h2>
              <p className="text-gray-600">–õ–∏–Ω–∞ –ø–æ–º–æ–∂–µ—Ç —Å –ª—é–±—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏ 24/7</p>
            </div>

            {/* –ë—ã—Å—Ç—Ä—ã–µ –≤–æ–ø—Ä–æ—Å—ã —É–±—Ä–∞–Ω—ã –ø–æ –∑–∞–ø—Ä–æ—Å—É */}

            {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
            <div className="space-y-3">
              <button
                onClick={() => setShowLinaChat(true)}
                className="w-full flex items-center justify-center gap-3 p-4 bg-gradient-to-r from-purple-500 to-blue-500 text-white rounded-xl hover:from-purple-600 hover:to-blue-600 transition-all"
              >
                <Icon name="MessageCircle" size={20} />
                <span className="font-medium">–ß–∞—Ç —Å –õ–∏–Ω–æ–π</span>
              </button>
              
              <button
                onClick={() => setShowFullSupport(true)}
                className="w-full flex items-center justify-center gap-3 p-4 bg-gray-100 text-gray-700 rounded-xl hover:bg-gray-200 transition-colors"
              >
                <Icon name="Settings" size={20} />
                <span className="font-medium">–°–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç</span>
              </button>
            </div>

            {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
            <div className="bg-blue-50 rounded-xl p-4 border border-blue-200">
              <div className="flex items-start gap-3">
                <Icon name="Info" size={20} className="text-blue-600 mt-0.5" />
                <div>
                  <h4 className="font-medium text-blue-900 mb-1">–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∞?</h4>
                  <p className="text-sm text-blue-700 leading-relaxed">
                    –õ–∏–Ω–∞ ‚Äî AI-–ø–æ–º–æ—â–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–≤–µ—á–∞–µ—Ç –º–≥–Ω–æ–≤–µ–Ω–Ω–æ. –ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å —á–µ–ª–æ–≤–µ–∫–∞, 
                    –æ–Ω–∞ –ø–µ—Ä–µ–≤–µ–¥–µ—Ç –≤–∞—Å –Ω–∞ –∞–≥–µ–Ω—Ç–∞ –∏–ª–∏ –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç.
                  </p>
                </div>
              </div>
            </div>
          </div>

          {/* –ü–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω—ã–π —á–∞—Ç —Å –õ–∏–Ω–æ–π */}
          {showLinaChat && (
            <div className="fixed inset-0 bg-white z-50 flex flex-col pt-20">
              <div className="bg-white h-full flex flex-col shadow-2xl">
                {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —á–∞—Ç–∞ */}
                <div className="flex items-center justify-between p-4 border-b border-gray-200 text-white" style={{backgroundColor: '#F1117E'}}>
                  <div className="flex items-center gap-3">
                    <div className="w-8 h-8 rounded-full bg-white/20 flex items-center justify-center">
                      ü§ñ
                    </div>
                    <div>
                      <h3 className="font-semibold">–õ–∏–Ω–∞</h3>
                      <p className="text-xs opacity-80">–û–Ω–ª–∞–π–Ω</p>
                    </div>
                  </div>
                  <button
                    onClick={() => onSectionChange?.('home')}
                    className="p-1 hover:bg-white/10 rounded"
                  >
                    <Icon name="X" size={16} />
                  </button>
                </div>

                {/* –°–æ–æ–±—â–µ–Ω–∏—è */}
                <div className="flex-1 p-4 overflow-y-auto">
                  <div className="space-y-3">
                    {messages.map((message) => (
                      <div key={message.id} className={`flex gap-3 ${message.isUser ? 'justify-end' : ''}`}>
                        {!message.isUser && (
                          <div className="w-6 h-6 rounded-full bg-gradient-to-r from-purple-500 to-blue-500 flex items-center justify-center text-sm flex-shrink-0">
                            ü§ñ
                          </div>
                        )}
                        <div className={`rounded-2xl px-4 py-2 max-w-[80%] ${
                          message.isUser 
                            ? 'bg-gradient-to-r from-purple-500 to-blue-500 text-white ml-auto' 
                            : 'bg-gray-100 text-gray-800'
                        }`}>
                          <p className="text-sm">{message.text}</p>
                        </div>
                        {message.isUser && (
                          <div className="w-6 h-6 rounded-full bg-gray-300 flex items-center justify-center text-sm flex-shrink-0">
                            {user.avatar ? user.avatar.charAt(0).toUpperCase() : 'üë§'}
                          </div>
                        )}
                      </div>
                    ))}
                    <div ref={messagesEndRef} />
                  </div>
                </div>

                {/* –ü–æ–ª–µ –≤–≤–æ–¥–∞ */}
                <div className="p-4 border-t border-gray-200 pb-20 md:pb-4">
                  <form onSubmit={handleSendMessage} className="flex gap-2">
                    <input
                      type="text"
                      value={inputMessage}
                      onChange={(e) => setInputMessage(e.target.value)}
                      placeholder="–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."
                      className="flex-1 px-3 py-2 border border-gray-300 rounded-full focus:ring-2 focus:ring-purple-500 focus:border-transparent text-sm"
                    />
                    <button 
                      type="submit"
                      disabled={!inputMessage.trim()}
                      className="w-8 h-8 bg-gradient-to-r from-purple-500 to-blue-500 text-white rounded-full flex items-center justify-center hover:from-purple-600 hover:to-blue-600 transition-all disabled:opacity-50 disabled:cursor-not-allowed"
                    >
                      <Icon name="Send" size={14} />
                    </button>
                  </form>
                </div>
              </div>
            </div>
          )}
        </>
      )}

      {/* –ü–ª–∞–≤–∞—é—â–∞—è –∫–Ω–æ–ø–∫–∞ –õ–∏–Ω–∞ - –ø–æ–¥–Ω—è—Ç–∞ –≤—ã—à–µ –º–µ–Ω—é */}
      {!showLinaChat && !showFullSupport && (
        <button
          onClick={() => setShowLinaChat(true)}
          className="fixed bottom-32 right-4 w-14 h-14 bg-gradient-to-r from-purple-500 to-blue-500 text-white rounded-full shadow-lg hover:shadow-xl transition-all duration-300 flex items-center justify-center animate-pulse z-40"
        >
          <span className="text-xl">ü§ñ</span>
        </button>
      )}
    </div>
  );
};

export default MobileSupportSystem;