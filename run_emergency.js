#!/usr/bin/env node

// –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–´–ô –°–ö–†–ò–ü–¢ –î–õ–Ø –ù–ï–ú–ï–î–õ–ï–ù–ù–û–ì–û –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–Ø DEV-–°–ï–†–í–ï–†–ê

const { spawn, exec } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é dev-—Å–µ—Ä–≤–µ—Ä!');

function killProcesses() {
    console.log('1. –£–±–∏–≤–∞—é –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã...');
    
    const commands = [
        'killall -9 node',
        'killall -9 vite',
        'pkill -f "npm.*dev"',
        'pkill -f "bun.*dev"',
        'fuser -k 5173/tcp',
        'lsof -ti:5173 | xargs kill -9'
    ];
    
    commands.forEach(cmd => {
        try {
            require('child_process').execSync(cmd, { stdio: 'ignore' });
        } catch (e) {
            // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ - –ø—Ä–æ—Ü–µ—Å—Å—ã –º–æ–≥—É—Ç –Ω–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å
        }
    });
}

function clearCache() {
    console.log('2. –û—á–∏—â–∞—é –∫—ç—à–∏...');
    try {
        if (fs.existsSync('node_modules/.vite')) {
            fs.rmSync('node_modules/.vite', { recursive: true, force: true });
        }
        require('child_process').execSync('bun cache clear', { stdio: 'ignore' });
    } catch (e) {
        console.log('–ö—ç—à —É–∂–µ –æ—á–∏—â–µ–Ω');
    }
}

function checkPackageJson() {
    console.log('3. –ü—Ä–æ–≤–µ—Ä—è—é package.json...');
    const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));
    
    if (!packageJson.scripts || !packageJson.scripts.dev) {
        console.error('‚ùå –ö–æ–º–∞–Ω–¥–∞ dev –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ package.json!');
        process.exit(1);
    }
    
    console.log('‚úÖ –ö–æ–º–∞–Ω–¥–∞ dev –Ω–∞–π–¥–µ–Ω–∞:', packageJson.scripts.dev);
}

function startServer() {
    return new Promise((resolve) => {
        console.log('4. üöÄ –ó–ê–ü–£–°–ö–ê–Æ DEV-–°–ï–†–í–ï–†...');
        console.log('–ó–∞–ø—É—Å–∫: bun run dev');
        console.log('URL: http://localhost:5173');
        console.log('–î–∞—Ç–∞ –∑–∞–ø—É—Å–∫–∞:', new Date().toLocaleString());
        
        const server = spawn('bun', ['run', 'dev'], {
            detached: false,
            stdio: ['ignore', 'pipe', 'pipe']
        });
        
        let output = '';
        
        server.stdout.on('data', (data) => {
            const text = data.toString();
            output += text;
            console.log(text.trim());
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–∑–Ω–∞–∫–∏ —É—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
            if (text.includes('Local:') || text.includes('localhost:5173') || text.includes('ready in')) {
                console.log('üî• –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...');
                setTimeout(() => resolve(server), 2000);
            }
        });
        
        server.stderr.on('data', (data) => {
            const text = data.toString();
            console.error('STDERR:', text.trim());
        });
        
        server.on('error', (err) => {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞:', err.message);
            resolve(null);
        });
        
        // –¢–∞–π–º–∞—É—Ç –Ω–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –¥–æ–ª–≥–æ –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è
        setTimeout(() => {
            if (output.length === 0) {
                console.log('‚è∞ –¢–∞–π–º–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è –∑–∞–ø—É—Å–∫–∞, –Ω–æ —Å–µ—Ä–≤–µ—Ä –≤–æ–∑–º–æ–∂–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç');
                resolve(server);
            }
        }, 5000);
    });
}

function checkServer() {
    return new Promise((resolve) => {
        console.log('5. üîç –ü—Ä–æ–≤–µ—Ä—è—é —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞...');
        
        exec('curl -s -I http://localhost:5173', (error, stdout) => {
            if (!error && (stdout.includes('200') || stdout.includes('404'))) {
                console.log('‚úÖ –†–ê–ë–û–¢–ê–ï–¢! –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ http://localhost:5173');
                console.log('üéâ DEV-–°–ï–†–í–ï–† –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù!');
                resolve(true);
            } else {
                console.log('‚ùå –ù–ï –†–ê–ë–û–¢–ê–ï–¢! –°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç');
                console.log('–ü–æ–ø—Ä–æ–±—É–π —Ä—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫: bun run dev');
                resolve(false);
            }
        });
    });
}

async function main() {
    try {
        killProcesses();
        clearCache();
        checkPackageJson();
        
        const server = await startServer();
        
        if (server) {
            // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
            await new Promise(resolve => setTimeout(resolve, 3000));
            
            const isWorking = await checkServer();
            
            if (isWorking) {
                console.log('\nüéØ –°–¢–ê–¢–£–°: –†–ê–ë–û–¢–ê–ï–¢');
                console.log('üåê URL: http://localhost:5173');
                console.log('üí° –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ñ–æ–Ω–µ');
                process.exit(0);
            } else {
                console.log('\nüéØ –°–¢–ê–¢–£–°: –ù–ï –†–ê–ë–û–¢–ê–ï–¢');
                process.exit(1);
            }
        } else {
            console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä');
            process.exit(1);
        }
        
    } catch (error) {
        console.error('üí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê:', error.message);
        process.exit(1);
    }
}

main();