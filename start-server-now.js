#!/usr/bin/env node

// –ù–ï–ú–ï–î–õ–ï–ù–ù–´–ô –ó–ê–ü–£–°–ö –°–ï–†–í–ï–†–ê
const { spawn } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üö® –≠–ö–°–¢–†–ï–ù–ù–´–ô –ó–ê–ü–£–°–ö –°–ï–†–í–ï–†–ê! üö®');
console.log('=' .repeat(50));

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ —Å–µ—Ä–≤–µ—Ä–∞
const serverPath = path.join(__dirname, 'server', 'start-emergency-server.js');

if (!fs.existsSync(serverPath)) {
  console.error('‚ùå –§–∞–π–ª —Å–µ—Ä–≤–µ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω!');
  console.log('üìç –û–∂–∏–¥–∞–µ–º—ã–π –ø—É—Ç—å:', serverPath);
  process.exit(1);
}

console.log('‚úÖ –§–∞–π–ª —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞–π–¥–µ–Ω');
console.log('üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º...');

// –£–±–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ –ø–æ—Ä—Ç—É 3001
const killPort = spawn('pkill', ['-f', '3001'], { stdio: 'ignore' });

killPort.on('close', () => {
  setTimeout(() => {
    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
    const server = spawn('node', [serverPath], {
      stdio: 'inherit',
      cwd: __dirname
    });

    server.on('error', (error) => {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', error.message);
      process.exit(1);
    });

    server.on('close', (code) => {
      console.log(`üõë –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Å –∫–æ–¥–æ–º ${code}`);
    });

    // Graceful shutdown
    process.on('SIGINT', () => {
      console.log('\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...');
      server.kill('SIGINT');
      process.exit(0);
    });

  }, 500);
});

setTimeout(() => {
  console.log('\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã...');
  setTimeout(async () => {
    try {
      const http = require('http');
      
      const options = {
        hostname: 'localhost',
        port: 3001,
        path: '/api/health',
        method: 'GET',
        timeout: 2000
      };

      const req = http.request(options, (res) => {
        let data = '';
        res.on('data', (chunk) => data += chunk);
        res.on('end', () => {
          if (res.statusCode === 200) {
            console.log('üü¢ –°–ï–†–í–ï–† –†–ê–ë–û–¢–ê–ï–¢ –£–°–ü–ï–®–ù–û!');
            console.log('üéØ –î–æ—Å—Ç—É–ø: http://localhost:3001');
            console.log('üîë –õ–æ–≥–∏–Ω: smm@gelazutdinov.ru');
            console.log('üóùÔ∏è  –ü–∞—Ä–æ–ª—å: admin123');
          } else {
            console.log('üü° –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω, –Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç:', res.statusCode);
          }
        });
      });

      req.on('error', (err) => {
        console.log('üî¥ –°–µ—Ä–≤–µ—Ä –µ—â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...');
      });

      req.on('timeout', () => {
        console.log('‚è∞ –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ, –Ω–æ —Å–µ—Ä–≤–µ—Ä –º–æ–∂–µ—Ç –µ—â–µ –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è...');
        req.destroy();
      });

      req.end();

    } catch (error) {
      console.log('‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞:', error.message);
    }
  }, 3000);
}, 1000);