const { spawn } = require('child_process');

console.log('üöÄ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...\n');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ tsx –¥–æ—Å—Ç—É–ø–µ–Ω
const tsxCheck = spawn('npx', ['tsx', '--version'], { stdio: 'pipe' });

tsxCheck.on('close', (code) => {
  if (code === 0) {
    console.log('‚úÖ tsx –¥–æ—Å—Ç—É–ø–µ–Ω\n');
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
    console.log('üî• –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä: cd server && npx tsx src/app.ts\n');
    
    const serverProcess = spawn('npx', ['tsx', 'src/app.ts'], {
      cwd: 'server',
      stdio: ['pipe', 'pipe', 'pipe']
    });

    let serverOutput = '';
    let hasError = false;

    serverProcess.stdout.on('data', (data) => {
      const output = data.toString();
      console.log(`[STDOUT] ${output.trim()}`);
      serverOutput += output;
    });

    serverProcess.stderr.on('data', (data) => {
      const error = data.toString();
      console.log(`[STDERR] ${error.trim()}`);
      hasError = true;
    });

    serverProcess.on('error', (error) => {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞:', error.message);
      hasError = true;
    });

    // –ó–∞–≤–µ—Ä—à–∞–µ–º —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
    setTimeout(() => {
      if (!hasError && serverOutput.includes('–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω')) {
        console.log('\n‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å—Ç–∏–ª—Å—è —É—Å–ø–µ—à–Ω–æ!');
      } else if (hasError) {
        console.log('\n‚ùå –û—à–∏–±–∫–∏ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞');
      } else {
        console.log('\n‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –Ω–µ –≤—ã–¥–∞–ª –æ–∂–∏–¥–∞–µ–º–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –∑–∞–ø—É—Å–∫–µ');
      }
      
      console.log('\nüìù –ü–æ–ª–Ω—ã–π –≤—ã–≤–æ–¥ —Å–µ—Ä–≤–µ—Ä–∞:');
      console.log(serverOutput);
      
      serverProcess.kill('SIGTERM');
      process.exit(0);
    }, 5000);
    
  } else {
    console.log('‚ùå tsx –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∫–æ–¥:', code);
    process.exit(1);
  }
});

tsxCheck.on('error', (error) => {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ tsx:', error.message);
  process.exit(1);
});